[
    //migrate [dbo].[address_labels] to [dbo].[utl_Address_Label]
    {
        "Id": 1000,
        "Source": {
            "Tables": "[dbo].[address_labels] al",
            "OrderBy": "order by Address_ID"
        },
        "Destination": {
            "Tables": "utl_Address_Label"
        },
        "Map": {
            "(case when Attached_To = 'A' then 1 when Attached_To = 'C' then 6 else 0 end) ModuleID": "ModuleID",
            "1 LabelFormatType": "LabelFormatType",
            "convert(bigint,Attached_Record_ID) AttachedRecordNumber": "AttachedRecordNumber",
            "convert(bigint,Address_ID) AddressID": "AddressID",
            "Label_Line_1": "LabelLine1",
            "Label_Line_2": "LabelLine2",
            "Label_Line_3": "LabelLine3",
            "Label_Line_4": "LabelLine4",
            "Label_Line_5": "LabelLine5",
            "Label_Line_6": "LabelLine6",
            "Label_Line_7": "LabelLine7",
            "Label_Line_8": "LabelLine8"
        }
    },
    //migrate [dbo].[address] to [dbo].[utl_Address]
    {
        "Id": 1001,
        "Source": {
            "Tables": "[dbo].[address] a",
            "OrderBy": "order by Account_Number"
        },
        "Destination": {
            "Tables": "utl_Address"
        },
        "Map": {
            "(case when Attached_To = 'A' then 1 when Attached_To = 'C' then 6 else 0 end) ModuleID": "ModuleID",
            "convert(bigint,Account_Number) AccountNumber": "AccountNumber",
            "convert(bigint,Attached_Record_Number) AttachedRecordNumber": "AttachedRecordNumber",
            "Location_Name": "LocationName",
            "Attention_Name": "AttentionName",
            "convert(bigint,Attention_Contact_Number) AttentionContactNumber": "AttentionContactNumber",
            "Street_Line_1": "StreetLine1",
            "Street_Line_2": "StreetLine2",
            "Street_Line_3": "StreetLine3",
            "City": "City",
            "County": "County",
            "State": "State",
            "Postal_Code": "PostalCode",
            "Country": "Country",
            "Address_Type": "AddressType",
            "Accounting_Interface": "AccountingInterface",
            "Ship_To_ID": "ShipToID",
            "Address_Label_Format": "AddressLabelFormat",
            "(case when exists (select 1 from [dbo].[account] where Account_Number = Account_Number and Primary_Address_Record = Address_Record_Number) then 1 else 0 end) IsPrimaryAddress": "IsPrimaryAddress",
            "(case when exists (select 1 from [dbo].[account] where Account_Number = Account_Number and Primary_Bill_To_Address_ID = Address_Record_Number) then 1 else 0 end) IsPrimaryBillToAddress": "IsPrimaryBillToAddress",
            "(case when exists (select 1 from [dbo].[account] where Account_Number = Account_Number and Primary_Ship_To_Address_ID = Address_Record_Number) then 1 else 0 end) IsPrimaryShipToAddress": "IsPrimaryShipToAddress",
            "Address_Notes": "AddressNotes"
        }
    },
    //migrate [dbo].[phone] to [dbo].[fld_Multi_FieldValue]
    {
        "Id": 1002,
        "Source": {
            "Tables": "[dbo].[phone] p",
            "OrderBy": "order by Account_Number"
        },
        "Destination": {
            "Tables": "fld_Multi_FieldValue"
        },
        "Map": {
            "(case when Phone_Medium = 'V' then 5 when Phone_Medium = 'F' then 6 else 0 end) FieldID": "FieldID",
            "convert(bigint,Account_Number) RecID": "RecID",
            "[tempdb].[dbo].[ConvertPhoneFax](Phone_Number,'') FieldVal": "FieldVal",
            "Extension": "Ext",
            "(case when exists (select 1 from [dbo].[account] where Account_Number = Account_Number and ((Primary_Phone_Record = Phone_Record_Number and Phone_Medium = 'V') or (Primary_Fax_Record = Phone_Record_Number and Phone_Medium = 'F'))) then 1 else 0 end) IsPrimary":  "IsPrimary",
            "Notes": "Notes"
        }
    },
    //migrate [dbo].[net] to [dbo].[fld_Multi_FieldValue]
    {
        "Id": 1003,
        "Source": {
            "Tables": "[dbo].[net] n",
            "OrderBy": "order by Account_Number"
        },
        "Destination": {
            "Tables": "fld_Multi_FieldValue"
        },
        "NeedTruncate": false,
        "Map": {
            "(case when Address_Type = 'E' then 7 when Address_Type = 'W' then 8 else 0 end) FieldID": "FieldID",
            "convert(bigint,Account_Number) RecID": "RecID",
            "Net_Address": "FieldVal",
            "(case when exists (select 1 from [dbo].[account] where Account_Number = Account_Number and ((Primary_Email_Record = Net_Record_Number and Address_Type = 'E') or (Primary_Fax_Record = Net_Record_Number and Address_Type = 'W'))) then 1 else 0 end) IsPrimary":  "IsPrimary",
            "Notes": "Notes"
        }
    },
    //migrate [adaptv3SAMPLE].[dbo].[account] to acc_Account
    {
        "Id": 1002,
        "Source": {
            "Tables": "[dbo].[account] acc",
            "OrderBy": "order by Account_Number"
        },
        "Destination": {
            "Tables": "acc_Account"
        },
        "Map": {
            "convert(bigint,Account_Number) AccountNumber": "AccountNumber",
            "Account_Name": "AccountName",
            "Account_Full_Name": "AccountFullName",
            "Company_ID": "CompanyID",
            "Customer_Number": "CustomerNumber",
            "Vendor_Number": "VendorNumber",
            "convert(varchar(255),Account_Type) AccountTypeID": "AccountTypeID",
            "convert(varchar(255),Last_Primary_Source) LastPrimarySourceID": "LastPrimarySourceID",
            "convert(varchar(255),Last_Secondary_Source) LastSecondarySourceID": "LastSecondarySourceID",
            "convert(bigint,Last_Marketing_Campaign) LastMarketingCampaignID": "LastMarketingCampaignID",
            "convert(varchar(255),Last_Marketing_Event) LastMarketingEventID": "LastMarketingEventID",
            "Original_Primary_Source": "OriginalPrimarySourceID",
            "Original_Secondary_Source": "Original_Secondary_Source",
            "convert(int, Original_Marketing_Campaign) OriginalMarketingCampaignID": "OriginalMarketingCampaignID",
            "convert(int, Original_Marketing_Event) OriginalMarketingEventID": "OriginalMarketingEventID",
            "convert(varchar(255),Territory_ID) TerritoryID": "TerritoryID",
            "Business_Type": "BusinessTypeID",
            "Account_Manager_Syspro_GetUserID": "AccountManager",
            "Service_Manager_Syspro_GetUserID": "ServiceManagerID",
            //"Service_Contract_Number":  "",
            //"Last_Technician": "",
            //"Last_Service_Date": "",
            //"Support_Basis": "",
            "Free_Support_Expires_Syspro_TF": "ReceivesFreeSupport",
            "null Free_Support_Expires_Date": "ReceivesFreeSupportUntil",
            "Service_Location": "ServiceLocationID",
            "convert(varchar(255),Service_Portal_Access_Level) ServicePortalAccessLevel": "ServicePortalAccessLevel",
            "convert(bigint,Primary_Sales_Contact) PrimaryContactID": "PrimaryContactID",
            //"Primary_Service_Contact":  "",
            //"Primary_Collections_Contact": "",
            //"Secondary_Customer_Contact": "",
            //"Primary_Vendor_Contact": "",
            //"Secondary_Vendor_Contact": "",
            //"Last_Phone_Record": "",
            "([tempdb].[dbo].[ConvertPhoneFax](select top 1 Phone_Record_Number from [dbo].[phone] where Account_Number = Account_Number and Phone_Record_Number = Primary_Phone_Record and Phone_Medium = 'V' and Attached_To = 'A',select top 1 Extension from [dbo].[phone] where Account_Number = Account_Number and Phone_Record_Number = Primary_Phone_Record and Phone_Medium = 'V' and Attached_To = 'A')) TelephoneNumber": "TelephoneNumber",
            //"Phone_Count": "",
            "([tempdb].[dbo].[ConvertPhoneFax](select top 1 Phone_Record_Number from [dbo].[phone] where Account_Number = Account_Number and Phone_Record_Number = Primary_Fax_Record and Phone_Medium = 'F' and Attached_To = 'A',select top 1 Extension from [dbo].[phone] where Account_Number = Account_Number and Phone_Record_Number = Primary_Fax_Record and Phone_Medium = 'F' and Attached_To = 'A')) TelephoneNumber": "TelephoneNumber",
            //"Fax_Count": "",
            //"Last_Address_Record": "",
            "Location_Name_Syspro_Address": "AddressLocationName",
            "Street_Line_1_Syspro_Address":  "AddressLine1",
            "Street_Line_2_Syspro_Address":  "AddressLine2",
            "Street_Line_3_Syspro_Address": "AddressLine3",
            "City_Syspro_Address": "City",
            "County_Syspro_Address": "County",
            "State_Syspro_Address": "State",
            "Postal_Code_Syspro_Address": "PostalCode",
            "Country_Syspro_Address": "Country",
            "Address_Type_Syspro_Address": "AddressTypeID",
            //"Primary_Address_Record": "",
            //"Primary_Bill_To_Address_ID": "",
            //"Primary_Ship_To_Address_ID": "",
            //"Address_Count": "",
            //"Last_Net_Record": "",
            "Primary_Email_Record": "",
            //"Email_Count": "",
            "Primary_Web_Record": "",
            //"Web_Count": "",
            "Alert_Flag": "",
            "Active_Flag": "",
            "Language": "",
            "Total_Activities": "",
            "Total_Sales": "",
            "Total_Open_Sales": "",
            "Total_Lost_Sales": "",
            "Open_Service_Tickets": "",
            "Closed_Service_Tickets": "",
            "Last_Service_Contact": "",
            "Last_Milestone": "",
            "Last_Milestone_Date": "",
            "Next_Milestone": "",
            "Tax_Schedule": "",
            "Payment_Terms": "",
            "Credit_Hold": "",
            "Credit_Hold_Date": "",
            "Shipping_Method": "",
            "FOB": "",
            "Currency_Code": "",
            "Customer_Class": "",
            "Do_Not_Call": "",
            "Do_Not_Fax": "",
            "Do_Not_Email": "",
            "Do_Not_Mail": "",
            "Accounting_Branch": "",

            "Notes": "Notes",
            "Created_Date": "CreatedDate",
            "Created_By": "CreatedUserID",
            "Modified_Date": "UpdatedDate",
            "Modified_By": "UpdatedUserID"
        }
    }

]
