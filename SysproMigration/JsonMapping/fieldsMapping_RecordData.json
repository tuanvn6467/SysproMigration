[
    //migrate [dbo].[address_labels] to [dbo].[utl_Address_Label]
    {
        "Id": 1000,
        "Source": {
            "Tables": "[dbo].[address_labels] al",
            "OrderBy": "order by Address_ID"
        },
        "Destination": {
            "Tables": "utl_Address_Label"
        },
        "Map": {
            "(case when Attached_To = 'A' then 1 when Attached_To = 'C' then 6 else 0 end) ModuleID": "ModuleID",
            "1 LabelFormatType": "LabelFormatType",
            "convert(bigint,Attached_Record_ID) AttachedRecordNumber": "AttachedRecordNumber",
            "convert(bigint,Address_ID) AddressID": "AddressID",
            "Label_Line_1": "LabelLine1",
            "Label_Line_2": "LabelLine2",
            "Label_Line_3": "LabelLine3",
            "Label_Line_4": "LabelLine4",
            "Label_Line_5": "LabelLine5",
            "Label_Line_6": "LabelLine6",
            "Label_Line_7": "LabelLine7",
            "Label_Line_8": "LabelLine8"
        }
    },
    //migrate [dbo].[address] to [dbo].[utl_Address]
    {
        "Id": 1001,
        "Source": {
            "Tables": "[dbo].[address] ad",
            "OrderBy": "order by ad.Account_Number",
            "Join": "left join [dbo].[account] acc on acc.Account_Number = ad.Account_Number and ad.Attached_To = 'A'"
        },
        "Destination": {
            "Tables": "utl_Address"
        },
        "Map": {
            "(case when Attached_To = 'A' then 1 when Attached_To = 'C' then 6 else 0 end) ModuleID": "ModuleID",
            "convert(bigint,ad.Account_Number) AccountNumber": "AccountNumber",
            "convert(bigint,Attached_Record_Number) AttachedRecordNumber": "AttachedRecordNumber",
            "Location_Name": "LocationName",
            "Attention_Name": "AttentionName",
            "convert(bigint,Attention_Contact_Number) AttentionContactNumber": "AttentionContactNumber",
            "Street_Line_1": "StreetLine1",
            "Street_Line_2": "StreetLine2",
            "Street_Line_3": "StreetLine3",
            "City": "City",
            "County": "County",
            "State": "State",
            "Postal_Code": "PostalCode",
            "Country": "Country",
            "Address_Type": "AddressType",
            "Accounting_Interface": "AccountingInterface",
            "Ship_To_ID": "ShipToID",
            "Address_Label_Format": "AddressLabelFormat",
            "(case when ad.Address_Record_Number = acc.Primary_Address_Record then 1 else 0 end) IsPrimaryAddress": "IsPrimaryAddress",
            "(case when ad.Address_Record_Number = acc.Primary_Bill_To_Address_ID then 1 else 0 end) IsPrimaryBillToAddress": "IsPrimaryBillToAddress",
            "(case when ad.Address_Record_Number = acc.Primary_Ship_To_Address_ID then 1 else 0 end) IsPrimaryShipToAddress": "IsPrimaryShipToAddress",
            "Address_Notes": "AddressNotes"
        }
    },
    //migrate [dbo].[phone] to [dbo].[fld_Multi_FieldValue]
    {
        "Id": 1002,
        "Source": {
            "Tables": "[dbo].[phone] p",
            "OrderBy": "order by p.Account_Number",
            "Join": "left join [dbo].[account] acc on acc.Account_Number = p.Account_Number and p.Attached_To = 'A'"
        },
        "Destination": {
            "Tables": "fld_Multi_FieldValue"
        },
        "NeedTruncate": false,
        "Map": {
            "(case when Phone_Medium = 'V' then 5 when Phone_Medium = 'F' then 6 else 0 end) FieldID": "FieldID",
            "convert(bigint,p.Account_Number) RecID": "RecID",
            "[tempdb].[dbo].[ConvertPhoneFax](Phone_Number,'') FieldVal": "FieldVal",
            "Extension": "Ext",
            "(case when ((p.Phone_Record_Number = acc.Primary_Phone_Record and p.Phone_Medium = 'V') or (p.Phone_Record_Number = acc.Primary_Fax_Record and p.Phone_Medium = 'F')) then 1 else 0 end) IsPrimary": "IsPrimary",
            "p.Notes": "Notes"
        }
    },
    //migrate [dbo].[net] to [dbo].[fld_Multi_FieldValue]
    {
        "Id": 1003,
        "Source": {
            "Tables": "[dbo].[net] n",
            "OrderBy": "order by n.Account_Number",
            "Join": "left join [dbo].[account] acc on acc.Account_Number = n.Account_Number and n.Attached_To = 'A'"
        },
        "Destination": {
            "Tables": "fld_Multi_FieldValue"
        },
        "NeedTruncate": false,
        "Map": {
            "(case when Address_Type = 'E' then 7 when Address_Type = 'W' then 8 else 0 end) FieldID": "FieldID",
            "convert(bigint,n.Account_Number) RecID": "RecID",
            "Net_Address": "FieldVal",
            "(case when ((n.Net_Record_Number = acc.Primary_Email_Record and n.Address_Type = 'E') or (n.Net_Record_Number = acc.Primary_Web_Record and n.Address_Type = 'W')) then 1 else 0 end) IsPrimary": "IsPrimary",
            "n.Notes": "Notes"
        }
    },
    //migrate [dbo].[account] to acc_Account
    {
        "Id": 1004,
        "Source": {
            "Tables": "[dbo].[account] acc",
            "OrderBy": "order by acc.Account_Number",
            "Join": "left join [dbo].[address] ad on ad.Account_Number = acc.Account_Number and ad.Address_Record_Number = acc.Primary_Address_Record and ad.Attached_To = 'A'",
            "Join1": "left join [dbo].[phone] phone on phone.Attached_Record_Number = acc.Account_Number and phone.Phone_Record_Number = acc.Primary_Phone_Record and phone.Phone_Medium = 'V' and phone.Attached_To = 'A'",
            "Join2": "left join [dbo].[phone] fax on fax.Attached_Record_Number = acc.Account_Number and fax.Phone_Record_Number = acc.Primary_Fax_Record and fax.Phone_Medium = 'F' and fax.Attached_To = 'A'",
            "Join3": "left join [dbo].[net] email on email.Attached_Record_Number = acc.Account_Number and email.Net_Record_Number = acc.Primary_Email_Record and email.Address_Type = 'E' and email.Attached_To = 'A'",
            "Join4": "left join [dbo].[net] web on web.Attached_Record_Number = acc.Account_Number and web.Net_Record_Number = acc.Primary_Web_Record and web.Address_Type = 'W' and web.Attached_To = 'A'",
            "Join5": "left join (select *,ROW_NUMBER() over(order by [Currency_Code]) CurrencyID from [adaptv3system].[dbo].[currency_codes]) curc on curc.Currency_Code = acc.Currency_Code",
            "JoinUser": "Account_Manager,Service_Manager,Create_User,Modified_User"
        },
        "Destination": {
            "Tables": "acc_Account"
        },
        "Map": {
            "convert(bigint,acc.Account_Number) AccountNumber": "AccountNumber",
            "acc.Account_Name": "AccountName",
            "Account_Full_Name": "AccountFullName",
            "'' CompanyID": "CompanyID",
            "Customer_Number": "CustomerNumber",
            "Vendor_Number": "VendorNumber",
            "convert(varchar(255),acc.Account_Type) AccountTypeID": "AccountTypeID",
            "convert(varchar(255),acc.Last_Primary_Source) LastPrimarySourceID": "LastPrimarySourceID",
            "convert(varchar(255),acc.Last_Secondary_Source) LastSecondarySourceID": "LastSecondarySourceID",
            "convert(bigint,acc.Last_Marketing_Campaign) LastMarketingCampaignID": "LastMarketingCampaignID",
            "convert(varchar(255),acc.Last_Marketing_Event) LastMarketingEventID": "LastMarketingEventID",
            "acc.Original_Primary_Source": "OriginalPrimarySourceID",
            "acc.Original_Secondary_Source": "OriginalSecondarySourceID",
            "convert(int, acc.Original_Marketing_Campaign) OriginalMarketingCampaignID": "OriginalMarketingCampaignID",
            "convert(int, acc.Original_Marketing_Event) OriginalMarketingEventID": "OriginalMarketingEventID",
            "convert(varchar(255),acc.Territory_ID) TerritoryID": "TerritoryID",
            "Business_Type": "BusinessTypeID",
            "ms_accountmanager.NewValTable AccountManager": "AccountManager",
            "ms_servicemanager.NewValTable ServiceManagerID": "ServiceManagerID",
            //"Service_Contract_Number":  "",
            //"Last_Technician": "",
            //"Last_Service_Date": "",
            "convert(varchar(255),Support_Basis) SupportStatusID": "SupportStatusID",
            "Free_Support_Expires_Syspro_TF": "ReceivesFreeSupport",
            "[tempdb].[dbo].[GetDateTime](Free_Support_Expires_Date,'000000') ReceivesFreeSupportUntil": "ReceivesFreeSupportUntil",
            "convert(varchar(255),Service_Location) ServiceLocationID": "ServiceLocationID",
            "convert(varchar(255),acc.Service_Portal_Access_Level) ServicePortalAccessLevel": "ServicePortalAccessLevel",
            "convert(bigint,Primary_Sales_Contact) PrimaryContactID": "PrimaryContactID",
            //"Primary_Service_Contact":  "",
            //"Primary_Collections_Contact": "",
            //"Secondary_Customer_Contact": "",
            //"Primary_Vendor_Contact": "",
            //"Secondary_Vendor_Contact": "",
            //"Last_Phone_Record": "",
            "([tempdb].[dbo].[ConvertPhoneFax](phone.Phone_Number,phone.Extension)) TelephoneNumber": "TelephoneNumber",
            //"Phone_Count": "",
            "([tempdb].[dbo].[ConvertPhoneFax](fax.Phone_Number,fax.Extension)) FaxNumber": "FaxNumber",
            //"Fax_Count": "",
            //"Last_Address_Record": "",
            "ad.Location_Name": "AddressLocationName",
            "ad.Street_Line_1": "AddressLine1",
            "ad.Street_Line_2": "AddressLine2",
            "ad.Street_Line_3": "AddressLine3",
            "ad.City": "City",
            "ad.County": "County",
            "ad.State": "State",
            "ad.Postal_Code": "PostalCode",
            "ad.Country": "Country",
            "ad.Address_Type": "AddressTypeID",
            "ad.Address_Notes": "AddressNotes",
            //"Primary_Address_Record": "",
            //"Primary_Bill_To_Address_ID": "",
            //"Primary_Ship_To_Address_ID": "",
            //"Address_Count": "",
            //"Last_Net_Record": "",
            "email.Net_Address EmailAddress": "EmailAddress",
            //"Email_Count": "",
            "web.Net_Address WebAddress": "WebAddress",
            //"Web_Count": "",
            //"Alert_Flag": "",
            "acc.Active_Flag_Syspro_TF": "IsActiveAccount",
            "convert(varchar(255),acc.Language) LanguageID": "LanguageID",
            "convert(bigint,Total_Activities) TotalActivities": "TotalActivities",
            "convert(decimal(15,4),Total_Sales) TotalSales": "TotalSales",
            //"Total_Open_Sales": "",
            "convert(decimal(15,4),Total_Lost_Sales) TotalLostSales": "TotalLostSales",
            "Open_Service_Tickets": "TotalOpenServiceTicket",
            "Closed_Service_Tickets": "TotalClosedServiceTicket",
            //"Last_Service_Contact": "",
            "convert(varchar(255),acc.Last_Milestone) LastMilestoneID": "LastMilestoneID",
            "[tempdb].[dbo].[GetDateTime](acc.Last_Milestone_Date,'000000') LastMilestoneDate": "LastMilestoneDate",
            "convert(varchar(255),acc.Next_Milestone) NextMilestoneID": "NextMilestoneID",
            "convert(varchar(255),Tax_Schedule) TaxScheduleID": "TaxScheduleID",
            "convert(varchar(255),Payment_Terms) PaymentTermID": "PaymentTermID",
            "Credit_Hold_Syspro_TF": "IsCreditHold",
            //"Credit_Hold_Date": "",
            "convert(varchar(255),Shipping_Method) ShippingMethodID": "ShippingMethodID",
            "convert(varchar(255),FOB) FOBID": "FOBID",
            "convert(varchar(255),curc.CurrencyID) CurrencyCodeID": "CurrencyCodeID",
            "convert(varchar(255),Customer_Class) CustomerClassID": "CustomerClassID",
            "acc.Do_Not_Call_Syspro_TF": "IsDoNotCall",
            "acc.Do_Not_Fax_Syspro_TF": "IsDoNotFax",
            "acc.Do_Not_Email_Syspro_TF": "IsDoNotEmail",
            "acc.Do_Not_Mail_Syspro_TF": "IsDoNotMail",
            "Accounting_Branch": "Branch",
            //"(select count(Contact_Number) from [dbo].[contact] where Account_Number = acc.Account_Number) TotalContact": "TotalContact",
            //"(select count(Item_Owned_Record_ID) from [dbo].[acctitem] where Account_Number = acc.Account_Number) TotalItemOwned": "TotalItemOwned",
            //"convert(decimal(15,4),(select count(Opportunity_Number) from [dbo].[oppty] where Account_Number = acc.Account_Number and Status = 1)) TotalOpenOpportunities": "TotalOpenOpportunities",
            //"convert(decimal(15,4),(select count(Opportunity_Number) from [dbo].[oppty] where Account_Number = acc.Account_Number and Status = 4)) TotalPostedOpportunities": "TotalPostedOpportunities",
            //"convert(decimal(15,4),(select count(Opportunity_Number) from [dbo].[oppty] where Account_Number = acc.Account_Number and Status = 5)) TotalCanceledOpportunities": "TotalCanceledOpportunities",
            //"(select count(Contract_Number) from [dbo].[service_contracts] where Account_Number = acc.Account_Number and Contract_Status = 2) TotalActiveServiceContracts": "TotalActiveServiceContracts",
            //"(select count(Contract_Number) from [dbo].[service_contracts] where Account_Number = acc.Account_Number and Contract_Status = 4) TotalExpiredServiceContracts": "TotalExpiredServiceContracts",
            //"(select count(Goal_Record_ID) from [dbo].[sales_goals] where Account_Number = acc.Account_Number) TotalGoals": "TotalGoals",
            //"(select top 1 ([tempdb].[dbo].[GetDateTime](Activity_Date,Activity_Time)) from [dbo].[act] where Account_Number = acc.Account_Number order by Activity_Date desc,Activity_Time desc) LastActivityDate": "LastActivityDate",
            //"(select top 1 ([tempdb].[dbo].[GetDateTime](Start_Date,Start_Time)) from [dbo].[appt] where Account_Number = acc.Account_Number and Completed = 'F' ORDER BY Account_Number ASC ,Completed ASC ,Start_Date ASC ,Start_Time ASC ,Appointment_ID ASC) NextActivityDate": "NextActivityDate",
            "acc.Notes": "Notes",
            "[tempdb].[dbo].[GetDateTime](acc.Create_Date,acc.Created_Time) Created_Date": "CreatedDate",
            "ms_createuser.NewValTable CreatedBy": "CreatedBy",
            "[tempdb].[dbo].[GetDateTime](acc.Modified_Date,acc.Modified_Time) ModifiedDate": "ModifiedDate",
            "ms_modifieduser.NewValTable ModifiedBy": "ModifiedBy"
        }
    },
    //migrate [dbo].[phone] to [dbo].[fld_Multi_FieldValue]
    {
        "Id": 1005,
        "Source": {
            "Tables": "[dbo].[phone] p",
            "OrderBy": "order by p.Account_Number",
            "Join": "left join [dbo].[contact] ct on ct.Contact_Number = p.Attached_Record_Number and p.Attached_To = 'C'"
        },
        "Destination": {
            "Tables": "fld_Multi_FieldValue"
        },
        "NeedTruncate": false,
        "Map": {
            "(case when Phone_Medium = 'V' then 63 when Phone_Medium = 'F' then 111 when Phone_Medium = 'M' then 62 else 0 end) FieldID": "FieldID",
            "convert(bigint,p.Attached_Record_Number) RecID": "RecID",
            "[tempdb].[dbo].[ConvertPhoneFax](Phone_Number,'') FieldVal": "FieldVal",
            "Extension": "Ext",
            "(case when ((p.Phone_Record_Number = ct.Default_Phone_Record and p.Phone_Medium = 'V') or (p.Phone_Record_Number = ct.Default_Fax_Record and p.Phone_Medium = 'F') or (p.Phone_Record_Number = ct.Default_Mobile_Record and p.Phone_Medium = 'M')) then 1 else 0 end) IsPrimary": "IsPrimary",
            "p.Notes": "Notes"
        }
    },
    //migrate [dbo].[net] to [dbo].[fld_Multi_FieldValue]
    {
        "Id": 1006,
        "Source": {
            "Tables": "[dbo].[net] n",
            "OrderBy": "order by n.Account_Number",
            "Join": "left join [dbo].[contact] ct on ct.Contact_Number = n.Attached_Record_Number and n.Attached_To = 'C'"
        },
        "Destination": {
            "Tables": "fld_Multi_FieldValue"
        },
        "NeedTruncate": false,
        "Map": {
            "(case when Address_Type = 'E' then 67 else 0 end) FieldID": "FieldID",
            "convert(bigint,n.Attached_Record_Number) RecID": "RecID",
            "Net_Address": "FieldVal",
            "(case when ((n.Net_Record_Number = ct.Default_Email_Record and n.Address_Type = 'E')) then 1 else 0 end) IsPrimary": "IsPrimary",
            "n.Notes": "Notes"
        }
    },
    //migrate [dbo].[contact] to [dbo].[con_Contact]
    {
        "Id": 1007,
        "Source": {
            "Tables": "[dbo].[contact] ct",
            "OrderBy": "order by ct.Contact_Number",
            "Join": "left join [adaptv3system].[dbo].[name_prefixes] np on np.Name_Prefix = ct.Name_Prefix",
            "Join1": "left join [adaptv3system].[dbo].[name_suffixes] ns on ns.Name_Suffix = ct.Name_Suffix",
            "Join2": "left join (select ROW_NUMBER() over (order by Job_Title) JobTitleID ,*  from [adaptv3system].[dbo].jobtitle) as jt on jt.Job_Title = ct.Job_Title",
            "Join3": "left join (select ROW_NUMBER() over (order by Department_Name) DepartmentID,*  from [adaptv3system].[dbo].dept) as dept on dept.Department_Name = ct.Department",
            "Join4": "left join [dbo].[phone] phone on phone.Attached_Record_Number = ct.Contact_Number and phone.Phone_Record_Number = ct.Default_Phone_Record and phone.Phone_Medium = 'V' and phone.Attached_To = 'C'",
            "Join5": "left join [dbo].[phone] fax on fax.Attached_Record_Number = ct.Contact_Number and fax.Phone_Record_Number = ct.Default_Fax_Record and fax.Phone_Medium = 'F' and fax.Attached_To = 'C'",
            "Join6": "left join [dbo].[phone] mobile on mobile.Attached_Record_Number = ct.Contact_Number and mobile.Phone_Record_Number = ct.Default_Mobile_Record and mobile.Phone_Medium = 'M' and mobile.Attached_To = 'C'",
            "Join7": "left join [dbo].[net] email on email.Attached_Record_Number = ct.Contact_Number and email.Net_Record_Number = ct.Default_Email_Record and email.Address_Type = 'E' and email.Attached_To = 'C'",
            "Join8": "left join [dbo].[account] acc on acc.Account_Number = ct.Account_Number",
            "Join9": "left join [dbo].[address] ad on ad.Account_Number = ct.Account_Number and ad.Address_Record_Number = acc.Primary_Address_Record and ad.Attached_To = 'A'",
            "JoinUser": "Contact_Manager,Created_By,Modified_By"
        },
        "Destination": {
            "Tables": "con_Contact"
        },
        "Map": {
            "convert(bigint, Contact_Number) ContactNumber": "ContactNumber",
            "convert(bigint, ct.Account_Number) AccountNumber": "AccountNumber",
            "ct.First_Name": "FirstName",
            "ct.Last_Name": "LastName",
            "ct.Middle_Name": "MiddleName",
            //"[Last_Name_Soundex]"
            "np.Record_ID ContactNamePrefixID": "ContactNamePrefixID",
            "ns.Record_ID ContactNameSuffixID": "ContactNameSuffixID",
            "Contact_Name": "ContactName",
            "Contact_Type": "ContactTypeID",
            //Account_Type
            //Contact_Territory
            "ms_contactmanager.NewValTable ContactManagerID": "ContactManagerID",
            "ct.Original_Primary_Source": "OriginalPrimarySourceID",
            "ct.Original_Secondary_Source": "OriginalSecondarySourceID",
            "ct.Original_Marketing_Campaign": "OriginalMarketingCampaignID",
            "ct.Original_Marketing_Event": "OriginalMarketingEventID",
            "ct.Last_Primary_Source": "LastPrimarySourceID",
            "ct.Last_Secondary_Source": "LastSecondarySourceID",
            "ct.Last_Marketing_Campaign": "LastMarketingCampaignID",
            "ct.Last_Marketing_Event": "LastMarketingEventID",
            "Active_Contact_Syspro_TF": "IsActiveContact",
            "ct.Do_Not_Call_Syspro_TF": "IsDoNotCall",
            "ct.Do_Not_Fax_Syspro_TF": "IsDoNotFax",
            "ct.Do_Not_Email_Syspro_TF": "IsDoNotEmail",
            "ct.Do_Not_Mail_Syspro_TF": "IsDoNotMail",
            "jt.JobTitleID": "JobTitle",
            "dept.DepartmentID": "Department",
            "Salutation": "Salutation",
            "([tempdb].[dbo].[ConvertPhoneFax](phone.Phone_Number,phone.Extension)) ContactPhoneNumber": "ContactPhoneNumber",
            "([tempdb].[dbo].[ConvertPhoneFax](fax.Phone_Number,fax.Extension)) ContactFaxNumber": "ContactFaxNumber",
            "([tempdb].[dbo].[ConvertPhoneFax](mobile.Phone_Number,mobile.Extension)) MobileNumber": "MobileNumber",
            "email.Net_Address ContactEmailAddress": "ContactEmailAddress",
            "ad.Location_Name": "AddressLocationName",
            "ad.Street_Line_1": "AddressLine1",
            "ad.Street_Line_2": "AddressLine2",
            "ad.Street_Line_3": "AddressLine3",
            "ad.City": "City",
            "ad.County": "County",
            "ad.State": "State",
            "ad.Postal_Code": "PostalCode",
            "ad.Country": "Country",
            "ad.Address_Type": "AddressTypeID",
            "ad.Address_Notes": "AddressNotes",
            "case when acc.Primary_Sales_Contact = ct.Contact_Number then 1 else 0 end IsPrimarySalesContact": "IsPrimarySalesContact",
            "case when acc.Primary_Service_Contact = ct.Contact_Number then 1 else 0 end IsPrimaryServiceContact": "IsPrimaryServiceContact",
            "case when acc.Primary_Collections_Contact = ct.Contact_Number then 1 else 0 end IsPrimaryCollectionsContact": "IsPrimaryCollectionsContact",
            "case when acc.Primary_Customer_Contact = ct.Contact_Number then 1 else 0 end IsPrimaryCustomerContact": "IsPrimaryCustomerContact",
            "case when acc.Secondary_Customer_Contact = ct.Contact_Number then 1 else 0 end IsSecondaryCustomerContact": "IsSecondaryCustomerContact",
            "case when acc.Primary_Vendor_Contact = ct.Contact_Number then 1 else 0 end IsPrimaryVendorContact": "IsPrimaryVendorContact",
            "case when acc.Secondary_Vendor_Contact = ct.Contact_Number then 1 else 0 end IsSecondaryVendorContact": "IsSecondaryVendorContact",
            "Contact_Address_ID": "PrimaryAddressID",
            "ct.Language": "LanguageID",
            //Parent_Contact
            "Decision_Making_Authority": "DecisionAuthorityID",
            //TotalActivities
            //TotalOpenOpportunities
            //TotalWonOpportunities
            //TotalLostOpportunities
            //TotalPostedOpportunities
            //TotalCanceledOpportunities
            //TotalOpenServiceTicket
            //TotalClosedServiceTicket
            //IsWriteToOutLook
            //ContactedByMarketingCampaignID
            //ContactedByMarketingEventID
            //AccountingContactNumber
            "ct.Notes": "Notes",
            "ct.Last_Milestone": "LastMilestoneID",
            "[tempdb].[dbo].[GetDateTime](ct.Last_Milestone_Date,'000000') LastMilestoneDate": "LastMilestoneDate",
            "ct.Next_Milestone": "NextMilestoneID",
            //Service_Portal_Access_Level
            //LastActivityDate
            //NextActivityDate
            "[tempdb].[dbo].[GetDateTime](ct.Created_Date,ct.Created_Time) Created_Date": "CreatedDate",
            "ms_createdby.NewValTable CreatedBy": "CreatedBy",
            "[tempdb].[dbo].[GetDateTime](ct.Modified_Date,ct.Modified_Time) ModifiedDate": "ModifiedDate",
            "ms_modifiedby.NewValTable ModifiedBy": "ModifiedBy"
        }
    },
    //migrate [dbo].[acctitem] to [dbo].[acc_Account_Item_Owned]
    {
        "Id": 1008,
        "Source": {
            "Tables": "[dbo].[acctitem] accit",
            "OrderBy": "order by accit.Item_Owned_Record_ID",
            "JoinUser": "Created_By,Modified_By"
        },
        "Destination": {
            "Tables": "acc_Account_Item_Owned"
        },
        "Map": {
            "convert(bigint,Item_Owned_Record_ID) AccountItemOwnID": "AccountItemOwnID",
            "convert(bigint,Parent_Record_ID) ParentID": "ParentID",
            "BOM_Level": "BOMLevel",
            "convert(bigint,accit.Account_Number) AccountNumber": "AccountNumber",
            "Item_Number": "ItemNumber",
            "Serial_Number": "SerialLotNumber",
            "Item_Class": "ItemClassID",
            "convert(decimal(15,4), Unit_Price_Paid) UnitPricePaid": "UnitPricePaid",
            "convert(decimal(15,4), Total_Quantity) TotalQuantity": "TotalQuantity",
            "Covered_By_Warranty_Syspro_TF": "IsCoveredByWarranty",
            "Warranty_Type": "WarrantyTypeID",
            "Warranty_Number": "WarrantyNumber",
            //"Warranty_Starts": ""
            "[tempdb].[dbo].[GetDateTime](Warranty_Starts,Warranty_Ends) WarrantyEnd": "WarrantyEnd",
            "[tempdb].[dbo].[GetDateTime](Free_Support_Ends,'000000') FreeSupportEnd": "FreeSupportEnd",
            "[tempdb].[dbo].[GetDateTime](Last_Service_Date,'000000') LastServiceDate": "LastServiceDate",
            "convert(bigint,Last_Ticket_Number) LastTicketNumber": "LastTicketNumber",
            "[tempdb].[dbo].[GetDateTime](Next_Scheduled_Service,'000000') NextScheduledService": "NextScheduledService",
            "convert(bigint,Contact_Number) ContactNumber": "ContactNumber",
            "Invoice_Number": "InvoiceNumber",
            "Order_Number": "OrderNumber",
            "Contains_Components_Syspro_TF": "IsContainComp",
            "accit.Notes": "Notes",
            "accit.Created_Date": "CreatedDate",
            "ms_createdby.NewValTable CreatedUserID": "CreatedUserID",
            "accit.Modified_Date": "UpdatedDate",
            "ms_modifiedby.NewValTable UpdatedUserID ": "UpdatedUserID"
        }
    },
    //migrate [dbo].[item_history] to [dbo].[acc_Account_Item_Owned_History]
    {
        "Id": 1009,
        "Source": {
            "Tables": "[dbo].[item_history] ith",
            "OrderBy": "order by ith.Transaction_Number",
            "Join": "left join [dbo].[acctitem] accit on accit.Item_Owned_Record_ID = ith.Item_Record_ID",
            "JoinUser": "Transferred_By"
        },
        "Destination": {
            "Tables": "acc_Account_Item_Owned_History"
        },
        "Map": {
            "convert(bigint,Transaction_Number) HistID": "HistID",
            "convert(bigint,Item_Record_ID) AccountItemOwnID": "AccountItemOwnID",
            "ms_transferredby.NewValTable TranUserID": "TranUserID",
            "[tempdb].[dbo].[GetDateTime](ith.Transfer_Date,ith.Transfer_Time) TranDate": "TranDate",
            "convert(bigint,ith.Account_Number) AccountNumber": "AccountNumber",
            "accit.Item_Number": "ItemNumber",
            "accit.Contact_Number": "ContactNumber",
            "accit.Serial_Number": "SerialLotNumber",
            "accit.Item_Class": "ItemClassID",
            "convert(decimal(15,4),accit.Unit_Price_Paid) UnitPricePaid": "UnitPricePaid",
            "convert(decimal(15,4),accit.Total_Quantity) TotalQuantity": "TotalQuantity",
            "accit.Covered_By_Warranty_Syspro_TF": "IsCoveredByWarranty",
            "accit.Warranty_Type": "WarrantyTypeID",
            "accit.Warranty_Number": "WarrantyNumber",
            "[tempdb].[dbo].[GetDateTime](accit.Warranty_Starts,accit.Warranty_Ends) WarrantyEnd": "WarrantyEnd",
            "[tempdb].[dbo].[GetDateTime](accit.Free_Support_Ends,'000000') FreeSupportEnd": "FreeSupportEnd",
            "[tempdb].[dbo].[GetDateTime](accit.Last_Service_Date,'000000') LastServiceDate": "LastServiceDate",
            "convert(bigint,accit.Last_Ticket_Number) LastTicketNumber": "LastTicketNumber",
            "[tempdb].[dbo].[GetDateTime](accit.Next_Scheduled_Service,'000000') NextScheduledService": "NextScheduledService",
            "accit.Invoice_Number": "InvoiceNumber",
            "accit.Order_Number": "OrderNumber",
            "accit.Contains_Components_Syspro_TF": "IsContainComp",
            "'Insert' TranType": "TranType",
            "accit.Notes": "Notes",
            "convert(decimal(15,4),0) CurrentUnitPrice": "CurrentUnitPrice"
        }
    },
    //migrate ticket to set_Service_Ticket
    {
        "Id": 1010,
        "Source": {
            "Tables": "[dbo].[ticket] st",
            "OrderBy": "order by st.Ticket_Number",
            "Join": "left join (select *,ROW_NUMBER() over(order by [Currency_Code]) CurrencyID from [adaptv3system].[dbo].[currency_codes]) curc on curc.Currency_Code = st.Currency_Code",
            "JoinUser": "Last_Escalation_User,Posted_By,Closed_By_User,Approved_Declined_By,Submitted_for_Approval_By,Acceptance_Entered_By,Submitted_to_Client_By,Hold_Waiting_for_User,Hold_Placed_By_User,Started_By,Reported_By,Created_By,Modified_By"
        },
        "Destination": {
            "Tables": "set_Service_Ticket"
        },
        "Map": {
            "convert(bigint, st.Ticket_Number) ServiceTicketNumber": "ServiceTicketNumber",
            "convert(bigint, st.Account_Number) AccountNumber": "AccountNumber",
            "convert(bigint, st.Contact_Number) ContactNumber": "ContactNumber",
            "convert(bigint, st.Related_Account_Number) RelatedAccountNumber": "RelatedAccountNumber",
            "convert(varchar, st.Related_Contact_Number) RelatedContactNumber": "RelatedContactNumber",
            "Reference_Number": "ReferenceNumber",
            "convert(varchar,Service_Ticket_Type) ServiceTicketTypeID": "ServiceTicketTypeID",
            "Subject": "Subject",
            "convert(varchar, Ticket_Status) TicketStatusTypeID": "TicketStatusTypeID",
            //"Open_Flag"
            //Skip_Client_Approval_Job
            "[tempdb].[dbo].[GetDateTime](st.Reported_Date,st.Reported_Time) ReportedDate": "ReportedDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](st.Reported_Date,st.Reported_Time)) ReportedTime": "ReportedTime",
            "ms_reportedby.NewValTable ReportedBy": "ReportedBy",
            "convert(varchar,Ticket_Source) SourceID": "SourceID",
            "[tempdb].[dbo].[GetDateTime](st.Started_Date,st.Started_Time) StartedDate": "StartedDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](st.Started_Date,st.Started_Time)) StartedTime": "StartedTime",
            "ms_startedby.NewValTable StartedBy": "StartedBy",
            "[tempdb].[dbo].[GetDateTime](st.Must_Respond_By_Date,st.Must_Respond_By_Time) RespondedDate": "RespondedDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](st.Must_Respond_By_Date,st.Must_Respond_By_Time)) RespondedTime": "RespondedTime",
            "[tempdb].[dbo].[GetDateTime](st.On_Hold_Date,st.On_Hold_Time) OnHoldDate": "OnHoldDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](st.On_Hold_Date,st.On_Hold_Time)) OnHoldTime": "OnHoldTime",
            "ms_holdplacedbyuser.NewValTable HoldPlacedByUserID": "HoldPlacedByUserID",
            "convert(varchar, On_Hold_Reason_ID) HoldReasonID": "HoldReasonID",
            "Hold_Waiting_For": "HoldWaitingForTypeID",
            "ms_holdwaitingforuser.NewValTable HoldWaitingForUserID": "HoldWaitingForUserID",
            "convert(bigint, st.Hold_Waiting_for_Account) HoldWaitingForAccountNumber": "HoldWaitingForAccountNumber",
            "[tempdb].[dbo].[GetDateTime](st.Submitted_to_Client_Date,st.Submitted_to_Client_Time) SubmittedToClientDate": "SubmittedToClientDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](st.Submitted_to_Client_Date,st.Submitted_to_Client_Time)) SubmittedToClientTime": "SubmittedToClientTime",
            "ms_submittedtoclientby.NewValTable SubmittedToClientBy": "SubmittedToClientBy",
            //"Accepted_By_Client"
            "[tempdb].[dbo].[GetDateTime](st.Accepted_Date,st.Accepted_Time) AcceptedDate": "AcceptedDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](st.Accepted_Date,st.Accepted_Time)) AcceptedTime": "AcceptedTime",
            "ms_acceptanceenteredby.NewValTable AcceptedBy": "AcceptedBy",
            //"Accepted_By_Contact_Number"
            "[tempdb].[dbo].[GetDateTime](st.Submitted_for_Approval_Date,st.Submitted_for_Approval_Time) SubmittedForApprovalDate": "SubmittedForApprovalDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](st.Submitted_for_Approval_Date,st.Submitted_for_Approval_Time)) SubmittedForApprovalTime": "SubmittedForApprovalTime",
            "ms_submittedforapprovalby.NewValTable SubmittedForApprovalBy": "SubmittedForApprovalBy",
            "Approval_Status": "ApprovalStatusID",
            "[tempdb].[dbo].[GetDateTime](st.Approved_Declined_Date,st.Approved_Declined_Time) ApprovedDeclinedDate": "ApprovedDeclinedDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](st.Approved_Declined_Date,st.Approved_Declined_Time)) ApprovedDeclinedTime": "ApprovedDeclinedTime",
            "ms_approveddeclinedby.NewValTable ApprovedDeclinedBy": "ApprovedDeclinedBy",
            "[tempdb].[dbo].[GetDateTime](st.Closed_Date,st.Closed_Time) ClosedDate": "ClosedDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](st.Closed_Date,st.Closed_Time)) ClosedTime": "ClosedTime",
            "ms_closedbyuser.NewValTable ClosedBy": "ClosedBy",
            "[tempdb].[dbo].[GetDateTime](st.Posted_Date,st.Posted_Time) PostedDate": "PostedDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](st.Posted_Date,st.Posted_Time)) PostedTime": "PostedTime",
            "ms_postedby.NewValTable PostedBy": "PostedBy",
            //Printed
            //Printed_Date
            //Printed_Time
            //Printed_By
            //Printed_Version_Number
            "Item_Number": "ItemNumber",
            "Serial_Number": "SerialNumber",
            "convert(bigint,Item_Owned_Record_ID) AccountItemOwnedID": "AccountItemOwnedID",
            //[Item_Check_Overridden]
            //"[Contract_Check_Overridden]"
            "convert(varchar,Problem_Class) ProblemClassID": "ProblemClassID",
            "convert(varchar,Problem_Type) ProblemTypeID": "ProblemTypeID",
            "convert(varchar,Problem_Subtype) ProblemSubTypeID": "ProblemSubTypeID",
            "convert(varchar,Resolution_Type) ResolutionTypeID": "ResolutionTypeID",
            //[Customer_Rating]
            "convert(varchar,Priority) PriorityTypeID": "PriorityTypeID",
            "convert(varchar,Severity) SeverityTypeID": "SeverityTypeID",
            "Assigned_To": "AssignedTo",
            "(case when Assigned_To = 2 then [tempdb].[dbo].GetUserIDNewCRM(Assigned_To_ID) else 0 end) AssignedToUser": "AssignedToUser",
            "convert(int,case when Assigned_To = 3 then Assigned_To_ID else NULL end) AssignedToQueue": "AssignedToQueue",
            "[tempdb].[dbo].[GetDateTime](st.Assigned_Date,st.Assigned_Time) AssignedDate": "AssignedDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](st.Assigned_Date,st.Assigned_Time)) AssignedTime": "AssignedTime",
            //"[Original_Assigned_To]"
            //"[Original_Assigned_To_ID]"
            //"[Original_Assigned_Date]"
            //"[Original_Assigned_Time]"
            "convert(varchar,Escalation_Level) EscalationLevelID": "EscalationLevelID",
            "[tempdb].[dbo].[GetDateTime](st.Last_Escalation_Date,st.Last_Escalation_Time) LastEscalationDate": "LastEscalationDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](st.Last_Escalation_Date,st.Last_Escalation_Time)) LastEscalationTime": "LastEscalationTime",
            "ms_lastescalationuser.NewValTable LastEscalationBy": "LastEscalationBy",
            "Escalation_Pattern_ID": "EscalationPatternID",
            "Routing_ID": "RoutingID",
            "[tempdb].[dbo].[GetDateTime](st.Next_Escalation_Date,st.Next_Escalation_Time) NextEscalationDate": "NextEscalationDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](st.Next_Escalation_Date,st.Next_Escalation_Time)) NextEscalationTime": "NextEscalationTime",
            //"Next_Escalation_Trigger": "NextEscalationTrigger",
            //Last_Activity_Date
            //Last_Activity_ID
            //Next_Activity_Date
            //Next_Activity_ID
            "Response_Given_Syspro_TF": "IsResponseGiven",
            "[tempdb].[dbo].[GetDateTime](st.Response_Date,st.Response_Time) ResponseRequiredByDate": "ResponseRequiredByDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](st.Response_Date,st.Response_Time)) ResponseRequiredByTime": "ResponseRequiredByTime",
            //Response_User
            "Total_Activity_Duration": "TotalActivityDurationMinutes",
            //"Override_Duration"
            //Manual_Duration
            "convert(bigint,Service_Ticket_Contract_Number) ContractNumber": "ContractNumber",
            "Labor_Fee_Basis": "LaborFeeBasisTypeID",
            "convert(decimal(15,4),Fixed_Labor_Fee_Amount) FixedLaborFeeAmount": "FixedLaborFeeAmount",
            "Fixed_Labor_Fee_Time_Increment": "FixedLaborFeeTimeIncrement",
            "Fixed_Labor_Fee_Time_Units": "FixedLaborFeeTimeUnit",
            //Override_Fee
            //Manual_Fee
            //Number_of_Web_Messages
            //Number_of_Read_Web_Messages
            "convert(varchar,Last_Milestone) LastMilestone": "LastMilestone",
            "[tempdb].[dbo].[GetDateTime](st.Last_Milestone_Date,'000000') LastMilestoneDate": "LastMilestoneDate",
            "convert(varchar,Next_Milestone) NextMilestone": "NextMilestone",
            "RMA_Number": "RMANumber",
            //"Bill_To_Attention": "BillToAttention"
            "0 BillToAttention": "BillToAttention",
            "Bill_To_Street_Line_1": "BillToAddressLine1",
            "Bill_To_Street_Line_2": "BillToAddressLine2",
            "Bill_To_Street_Line_3": "BillToAddressLine3",
            "Bill_To_City": "BillToCity",
            "Bill_To_County": "BillToCounty",
            "Bill_To_State": "BillToState",
            "Bill_To_Postal_Code": "BillToPostalCode",
            "Bill_To_Country": "BillToCountry",
            //"Ship_To_Attention": "ShipToAttention"
            "0 ShipToAttention": "ShipToAttention",
            "Ship_To_Street_Line_1": "ShipToAddressLine1",
            "Ship_To_Street_Line_2": "ShipToAddressLine2",
            "Ship_To_Street_Line_3": "ShipToAddressLine3",
            "Ship_To_City": "ShipToCity",
            "Ship_To_County": "ShipToCounty",
            "Ship_To_State": "ShipToState",
            "Ship_To_Postal_Code": "ShipToPostalCode",
            "Ship_To_Country": "ShipToCountry",
            //Printed_Comments_ID
            "curc.CurrencyID": "Currency",
            //Printed_Format_ID
            "Tax_Schedule_ID": "TaxScheduleID",
            "Tax_Rate": "TaxRate",
            "convert(decimal(15,4),Total_Standard_Fee) TotalFee": "TotalFee",
            //"Total_Overtime_Labor_Fee"
            //Total_Other_Time_Labor_Fee
            "convert(decimal(15,4),Total_Parts_Fee) TotalPartsFee": "TotalPartsFee",
            "convert(decimal(15,4),Total_Expenses_Cost) TotalExpensesCost": "TotalExpensesCost",
            "convert(decimal(15,4),Total_Billed_Expenses_Fee) TotalBilledExpensesFee": "TotalBilledExpensesFee",
            "convert(decimal(15,4),Total_Tax) TotalTax": "TotalTax",
            "convert(decimal(15,4),Total_Expenses_Cost) TotalExpensesCost": "TotalExpensesCost",
            //Total_Parts_Cost
            //Total_Standard_Labor_Cost
            //Total_Overtime_Labor_Cost
            //Total_Other_Time_Labor_Cost
            //Total_Non_Billed_Labor_Cost
            //Total_Standard_Time_Minutes
            //Total_Over_Time_Minutes
            //Total_Other_Time_Minutes
            //Total_Non_Billed_Time_Minutes
            //Last_Labor_Record_ID
            //Last_Parts_Record_ID
            //Last_Expense_Record_ID
            //Last_Job_Type_ID
            "st.Reason_for_Hold_Notes ReasonForHoldNotes": "ReasonForHoldNotes",
            "[tempdb].[dbo].[GetDateTime](st.Created_Date,st.Created_Time) Created_Date": "CreatedDate",
            "ms_createdby.NewValTable CreatedBy": "CreatedBy",
            "[tempdb].[dbo].[GetDateTime](st.Modified_Date,st.Modified_Time) ModifiedDate": "ModifiedDate",
            "ms_modifiedby.NewValTable ModifiedBy": "ModifiedBy"
        }
    },
    //migrate [dbo].[service_contracts] to [dbo].[set_Service_Contract]
    {
        "Id": 1011,
        "Source": {
            "Tables": "[dbo].[service_contracts] svc",
            "OrderBy": "order by svc.Contract_Number",
            "Join": "left join [dbo].[contract_hold_notes] chn on chn.Contract_Number = svc.Contract_Number",
            "Join1": "left join [dbo].[contract_renew] cr on cr.Old_Contract = svc.Contract_Number",
            "Join2": "outer apply (select top 1 * from [adaptv3system].[dbo].[users] statusby where statusby.User_ID COLLATE SQL_Latin1_General_CP1_CI_AS = chn.Status_By COLLATE SQL_Latin1_General_CP1_CI_AS) statusby",
            "Join3": "outer apply (select top 1 * from [tempdb].[dbo].[MigrateSupport] ms_statusby where ms_statusby.TargetServer='.' and ms_statusby.OldValTable = statusby.Email_Address order by ms_statusby.Id desc) ms_statusby",
            "JoinUser": "Created_By,Modified_By"
        },
        "Destination": {
            "Tables": "set_Service_Contract"
        },
        "Map": {
            "svc.Contract_Number_Syspro_FBI": "ContractNumber",
            "svc.Contract_Type": "ContractTypeID",
            "svc.Account_Number_Syspro_FBI": "AccountNumber",
            //Account_Name
            "svc.Contract_Status": "ContractStatusTypeID",
            "svc.Active_Flag_Syspro_TF": "IsActive",
            "Opportunity_Number_Syspro_FBI": "OpportunityNumber",
            "Warranty_Flag_Syspro_TF": "IsWarranty",
            "Warranty_Item_Number": "WarrantyItemNumber",
            "Warranty_Serial_Number": "WarrantySerialNumber",
            "Warranty_Lot_Number": "WarrantyLotNumber",
            "Fee_Basis": "ContractFeeBasisTypeID",
            "Fee_Basis_Amount_Syspro_FD": "FeeBasisAmount",
            "Contract_Actual_Fee_Syspro_FD": "ContractActualFee",
            "Covered_Items": "CoveredItemTypeID",
            "Covered_Parts": "CoveredPartTypeID",
            "Covered_Labor": "CoveredLaborTypeID",
            "Covered_Expenses": "CoveredExpense",
            "Limit_to_Authorized_Contacts_Syspro_TF": "IsLimitToAuthorizedContact",
            "Maximum_Authorized_Contacts": "MaximumAuthorizedContact",
            "Authorized_Contact_Count": "AuthorizedContactCount",
            "Usage_Fee_Basis": "UsageFeeBasisTypeID",
            "Usage_Limit_Flag_Syspro_TF": "IsUsageLimit",
            "Usage_Limit_Amount": "UsageLimitAmount",
            "Usage_Limit_Units": "UsageLimitUnitTypeID",
            "Fixed_Labor_Rate_Amount_Syspro_FD": "FixedLaborRateAmount",
            "Fixed_Labor_Rate_Units": "FixedLaborRateUnitTypeID",
            "Other_Billing_Increment_Syspro_FD": "OtherBillingIncrement",
            "Other_Billing_Increment_Units": "OtherBillingIncrementUnit",
            "Follows_Calendar_ID": "FollowCalendarID",
            "Promised_Response_Time_Amount": "PromisedResponseTimeAmount",
            "Promised_Response_Time_Units": "PromisedResponseTimeUnitTypeID",
            //"Triggered_Process_ID": "TriggeredProcessID",
            "[tempdb].[dbo].[GetDateTime](svc.Sold_Date,'000000') SoldDate": "SoldDate",
            "[tempdb].[dbo].[GetDateTime](svc.Start_Date,'000000') StartDate": "StartDate",
            "[tempdb].[dbo].[GetDateTime](svc.Effective_Start_Date,'000000') EffectiveStartDate": "EffectiveStartDate",
            "[tempdb].[dbo].[GetDateTime](svc.Expiration_Date,'000000') ExpirationDate": "ExpirationDate",
            "[tempdb].[dbo].[GetDateTime](svc.Renewal_Deadline,'000000') RenewalDeadline": "RenewalDeadline",
            "Contract_Starts_Basis": "ContractStartTypeID",
            "Contract_Ends_Basis": "ContractEndTypeID",
            "Contract_Ends_Fixed_Month": "ContractEndFixedMonth",
            "Contract_Ends_Fixed_Day": "ContractEndFixedDay",
            "Minimum_Duration_Amount": "MinimumDurationAmount",
            "Minimum_Duration_Units": "MinimumDurationUnit",
            "Other_Duration_Amount": "OtherDurationAmount",
            "Other_Duration_Units": "OtherDurationUnitTypeID",
            "Renewal_Limit_Days": "RenewalLimitDay",
            "Total_Minutes_Used": "TotalMinutesUsed",
            "Total_Tickets_Used": "TotalTicketsUsed",
            "Expiration_Job_ID": "ExpirationJobID",
            "case when chn.Contract_Number >0 then 1 else 0 end IsContractOnHold": "IsContractOnHold",
            "RTRIM(LTRIM(convert(varchar(max),isnull(chn.Status_Notes,'')))) HoldReasonNotes": "HoldReasonNotes",
            "[tempdb].[dbo].[GetDateTime](chn.Status_Date,chn.Status_Time) HoldDate": "HoldDate",
            "ms_statusby.NewValTable HoldUserID": "HoldUserID",
            "case when cr.Old_Contract > 0 then convert(decimal(15,4),Contract_Actual_Fee) else NULL end ContractRenewalFee": "ContractRenewalFee",
            "case when cr.Old_Contract > 0 then 1 else 0 end ContractRenewed": "ContractRenewed",
            "DATEDIFF(day,[tempdb].[dbo].[GetDateTime](svc.Sold_Date,'000000'),[tempdb].[dbo].[GetDateTime](svc.Expiration_Date,'000000')) DaysUntilExpiration": "DaysUntilExpiration",
            "svc.Notes": "Notes",
            "[tempdb].[dbo].[GetDateTime](svc.Created_Date,svc.Created_Time) CreatedDate": "CreatedDate",
            "ms_createdby.NewValTable CreatedUserID": "CreatedUserID",
            "[tempdb].[dbo].[GetDateTime](svc.Modified_Date,svc.Modified_Time) UpdatedDate": "UpdatedDate",
            "ms_modifiedby.NewValTable UpdatedUserID": "UpdatedUserID"
        }
    },
    //migrate [dbo].[contract_renew] to [dbo].[set_Contract_Renew]
    {
        "Id": 1012,
        "Source": {
            "Tables": "[dbo].[contract_renew] cr",
            "OrderBy": "order by cr.Old_Contract"
        },
        "Destination": {
            "Tables": "set_Contract_Renew"
        },
        "Map": {
            "Old_Contract_Syspro_FBI": "OldContractNumber",
            "New_Contract_Syspro_FBI": "NewContractNumber"
        }
    },
    //migrate [dbo].[contract_warranty_items] to [dbo].[set_Contract_Item_Owned_Xref]
    {
        "Id": 1013,
        "Source": {
            "Tables": "[dbo].[contract_warranty_items] cwi",
            "OrderBy": "order by cwi.Contract_Number"
        },
        "Destination": {
            "Tables": "set_Contract_Item_Owned_Xref"
        },
        "Map": {
            "Contract_Number_Syspro_FBI": "ContractNumber",
            "Line_Number": "LineNumber",
            "Item_Number": "ItemNumber",
            "Warrant_Serial": "WarrantSerial",
            "Item_Owned_ID_Syspro_FBI": "AccountItemOwnID"
        }
    },
    //migrate [dbo].[svc_contract_items] to [dbo].[set_Contract_Item_Xref]
    {
        "Id": 1014,
        "Source": {
            "Tables": "[dbo].[svc_contract_items] sci",
            "OrderBy": "order by sci.Contract_Number"
        },
        "Destination": {
            "Tables": "set_Contract_Item_Xref"
        },
        "Map": {
            "Contract_Number_Syspro_FBI": "ContractNumber",
            "Account_Number_Syspro_FBI": "AccountNumber",
            "Contract_Active_Syspro_TF": "IsContractActive",
            "Item_Coverage_Scope": "CoverageScopeTypeID",
            "Item_Class_ID": "ItemClassID",
            "Item_Number": "ItemNumber"
        }
    },
    //migrate [dbo].[svc_contract_parts] to [dbo].[set_Contract_Part_Xref]
    {
        "Id": 1015,
        "Source": {
            "Tables": "[dbo].[svc_contract_parts] scp",
            "OrderBy": "order by scp.Contract_Number"
        },
        "Destination": {
            "Tables": "set_Contract_Part_Xref"
        },
        "Map": {
            "Contract_Number_Syspro_FBI": "ContractNumber",
            "Account_Number_Syspro_FBI": "AccountNumber",
            "Contract_Active_Syspro_TF": "IsContractActive",
            "Item_Coverage_Scope": "CoverageScopeTypeID",
            "Item_Class_ID": "ItemClassID",
            "Item_Number": "ItemNumber",
            "Item_Coverage_Scope": "CoverageScopeTypeID",
            "Coverage_Level": "CoverageScopeLevelTypeID",
            "Discount_Amount_Syspro_FD": "DiscountAmount",
            "Fixed_Price_Syspro_FD": "FixedPrice"
        }
    },
    //migrate [dbo].[svc_contract_jobs] to [dbo].[set_Contract_Job_Xref]
    {
        "Id": 1016,
        "Source": {
            "Tables": "[dbo].[svc_contract_jobs] scj",
            "OrderBy": "order by scj.Contract_Number"
        },
        "Destination": {
            "Tables": "set_Contract_Job_Xref"
        },
        "Map": {
            "Contract_Number_Syspro_FBI": "ContractNumber",
            "Account_Number_Syspro_FBI": "AccountNumber",
            "Active_Contract_Syspro_TF": "IsActiveContract",
            "Coverage_Scope": "CoverageScopeTypeID",
            "Job_Class": "JobClassID",
            "Job_Type": "JobTypeID",
            "Coverage_Level": "CoverageLevelID",
            "Coverage_Level": "CoverageScopeLevelTypeID",
            "Discount_Amount_Syspro_FD": "DiscountAmount",
            "Fixed_Price_Syspro_FD": "FixedPrice",
            "Fixed_Price_Time_Units": "FixedPriceTimeUnit"
        }
    },
    //migrate [dbo].[svc_contract_expenses] to [dbo].[set_Contract_Expense_Xref]
    {
        "Id": 1017,
        "Source": {
            "Tables": "[dbo].[svc_contract_expenses] sce",
            "OrderBy": "order by sce.Contract_Number"
        },
        "Destination": {
            "Tables": "set_Contract_Expense_Xref"
        },
        "Map": {
            "Contract_Number_Syspro_FBI": "ContractNumber",
            "Account_Number_Syspro_FBI": "AccountNumber",
            "Active_Contract_Syspro_TF": "IsContractActive",
            "Expense_Category": "ExpenseCategoryID"
        }
    },
    //migrate [dbo].[service_contract_contact] to [dbo].[set_Contract_Contact_Xref]
    {
        "Id": 1018,
        "Source": {
            "Tables": "[dbo].[service_contract_contact] scc",
            "OrderBy": "order by scc.Contract_Number"
        },
        "Destination": {
            "Tables": "set_Contract_Contact_Xref"
        },
        "Map": {
            "Contract_Number_Syspro_FBI": "ContractNumber",
            "Authorized_Contact_Number_Syspro_FBI": "ContactNumber"
        }
    },
    //migrate [dbo].[oppty] to [dbo].[opp_Opportunity]
    {
        "Id": 1019,
        "Source": {
            "Tables": "[dbo].[oppty] opp",
            "OrderBy": "order by opp.Opportunity_Number",
            "Join": "left join (select *,ROW_NUMBER() over(order by [Currency_Code]) CurrencyID from [adaptv3system].[dbo].[currency_codes]) curc on curc.Currency_Code = opp.Currency_Code",
            "JoinUser": "Salesperson_ID,Posted_By,Created_By,Modified_By"
        },
        "Destination": {
            "Tables": "opp_Opportunity"
        },
        "Map": {
            "opp.Opportunity_Number_Syspro_FD": "OpportunityNumber",
            "opp.Account_Number_Syspro_FD": "AccountNumber",
            "opp.Contact_Number_Syspro_FD": "ContactNumber",
            //[Related_Account_Number]
            //[Related_Contact_Number]
            "Opportunity_Name": "Subject",
            "Opportunity_Type": "OpportunityTypeID",
            "Status": "StatusID",
            //Open_Flag
            "Posted_Syspro_TF": "Posted",
            "[tempdb].[dbo].[GetDateTime](opp.Posted_Date,opp.Posted_Time) PostedDate": "PostedDate",
            "ms_postedby.NewValTable PostedBy": "PostedBy",
            "Order_Number": "OrderNumber",
            "(case when Status = 2 then Win_Loss_Code else 0 end) WinReason": "WinReason",
            "(case when Status = 3 then Win_Loss_Code else 0 end) LossReason": "LossReason",
            "[tempdb].[dbo].[GetDateTime](opp.Start_Date,'000000') StartDate": "StartDate",
            "[tempdb].[dbo].[GetDateTime](opp.Estimated_Close_Date,'000000') EstimatedCloseDate": "EstimatedCloseDate",
            "[tempdb].[dbo].[GetDateTime](opp.Actual_Close_Date,'000000') ActualCloseDate": "ActualCloseDate",
            //[Hold_Flag]
            "Territory_ID": "TerritoryID",
            "ms_salespersonid.NewValTable Salesperson": "Salesperson",
            "ms_salespersonid.NewValTable AssignedTo": "AssignedTo",
            //Assigned_Date
            "Primary_Source": "PrimarySource",
            "Secondary_Source": "SecondarySource",
            "Marketing_Campaign_Syspro_FBI": "MarketingCampaign",
            "Marketing_Event_Syspro_FBI": "MarketingEvent",
            "Total_Value_Syspro_FD": "TotalValue",
            //Last_Line_Item
            "convert(float,Chance_to_Close) ChancetoClose": "ChancetoClose",
            "Last_Milestone": "LastMilestone",
            "[tempdb].[dbo].[GetDateTime](opp.Last_Milestone_Date,'000000') LastMilestoneDate": "LastMilestoneDate",
            "Next_Milestone": "NextMilestone",
            //"Last_Contact_Record_ID"
            "Payment_Terms_ID": "PaymentTerms",
            "Shipping_Method_ID": "ShippingMethod",
            "FOB_ID": "FOB",
            "curc.CurrencyID": "Currency",
            "Tax_Schedule_ID": "TaxSchedule",
            "Tax_Rate": "TaxRate",
            "Total_Tax_Syspro_FD": "TotalTax",
            //"Shipping_Amount"
            //"Total_Discount"
            "Purchase_Order_Number": "PurchaseOrderNumber",
            "Purchase_Order_Amount_Syspro_FD": "PurchaseOrderAmount",
            "[tempdb].[dbo].[GetDateTime](opp.Purchase_Order_Date,'000000') PurchaseOrderDate": "PurchaseOrderDate",
            //Number_of_Web_Messages
            //Read_Web_Messages
            "Bill_To_Attention": "BillToAttention",
            "Bill_To_Address_Line_1": "BillToAddressLine1",
            "Bill_To_Address_Line_2": "BillToAddressLine2",
            "Bill_To_Address_Line_3": "BillToAddressLine3",
            "Bill_To_City": "BillToCity",
            "Bill_To_County": "BillToCounty",
            "Bill_To_State": "BillToState",
            "Bill_To_Postal_Code": "BillToPostalCode",
            "Bill_To_Country": "BillToCountry",
            "Ship_To_Attention": "ShipToAttention",
            "Ship_To_Address_Line_1": "ShipToAddressLine1",
            "Ship_To_Address_Line_2": "ShipToAddressLine2",
            "Ship_To_Address_Line_3": "ShipToAddressLine3",
            "Ship_To_City": "ShipToCity",
            "Ship_To_County": "ShipToCounty",
            "Ship_To_State": "ShipToState",
            "Ship_To_Postal_Code": "ShipToPostalCode",
            "Ship_To_Country": "ShipToCountry",
            "Service_Ticket_Number_Syspro_FBI": "ServiceTicketNumber",
            "Service_Contract_Number_Syspro_FBI": "ContractNumber",
            //Last_ERP_Quotation_Number
            //Last_CRM_Quotation_Number
            //Total_Mileage
            "opp.Notes": "OpportunityNotes",
            "opp.Created_Date": "CreatedDate",
            "ms_createdby.NewValTable CreatedBy": "CreatedBy",
            "opp.Modified_Date": "ModifiedDate",
            "ms_modifiedby.NewValTable ModifiedBy ": "ModifiedBy"
        }
    },
    //migrate [dbo].[campaign] to cam_Campaign
    {
        "Id": 1020,
        "Source": {
            "Tables": "[dbo].[campaign] cam",
            "OrderBy": "order by Campaign_ID",
            "JoinUser": "Approved_Declined_By,Campaign_Manager,Started_By,Submitted_By,Created_By,Modified_By"
        },
        "Destination": {
            "Tables": "cam_Campaign"
        },
        "Map": {
            "Campaign_ID_Syspro_FBI": "CampaignNumber",

            "Campaign_Name": "CampaignName",
            "Campaign_Type": "CampaignType",
            "Status": "CampaignStatusID",
            "[tempdb].[dbo].[GetDateTime](cam.Submitted_Date,cam.Submitted_Time) SubmittedDate": "SubmittedDate",
            "ms_submittedby.NewValTable SubmittedBy": "SubmittedBy",
            //Started_Date
            //Started_Time
            "ms_startedby.NewValTable StartedBy": "StartedBy",
            "Approval_Status": "ApprovalStatus",
            "[tempdb].[dbo].[GetDateTime](cam.Approved_Declined_Date,cam.Approved_Declined_Time) ApprovedDate": "ApprovedDate",
            "[tempdb].[dbo].[GetTime](cam.Approved_Declined_Time) ApprovedTime": "ApprovedTime",
            "ms_approveddeclinedby.NewValTable ApprovedBy ": "ApprovedBy",
            "Assign_Before_Approval_Syspro_TF": "AssignBeforeApproval",
            "Open_Campaign_Syspro_TF": "IsOpenCampaign",
            "[tempdb].[dbo].[GetDateTime](cam.Start_Date,'000000') StartDate": "StartDate",
            "[tempdb].[dbo].[GetDateTime](cam.End_Date,'000000') EndDate": "EndDate",
            "ms_campaignmanager.NewValTable CampaignManager ": "CampaignManager",
            //[Started_Date]
            //[Started_Time]
            //Assigned_Date
            //Assigned_Time
            "Outbound_Process": "OutboundProcess",
            "Email_Response_Process": "EmailResponseProcess",
            //Opt_In_Response_Process
            //"Fax_Response_Process": "FaxResponseProcess",
            //"Web_Response_Process": "WebResponseProcess",
            //"Telephone_Response_Process": "PhoneResponseProcess",
            //Total_Market_Population
            "Primary_Source": "PrimarySourceID",
            "Secondary_Source": "SecondarySourceID",
            "Responses_Goal_Syspro_FD": "ResponsesGoal",
            "Sales_Goal_Syspro_FD": "SalesGoal",
            //Account_Responses
            "[tempdb].[dbo].[GetDateTime](cam.Last_Response_Date,'000000') LastResponseDate": "LastResponseDate",
            //Accounts_Created
            "Outbound_Contacts": "TotalOutboundContacts",
            "Total_Sales_Syspro_FD": "TotalSales",
            //Total_Pipeline_Value
            //Total_Pipeline_Weighted_Value
            //Opportunities_Count
            "Won_Opportunities_Count": "NumberofWonSales",
            "Lost_Opportunities_Count": "NumberofLostSales",
            "Open_Opportunities_Count": "NumberofOpenSales",
            //Total_Opportunity_Days_to_Close
            "Total_Expenses_Syspro_FD": "TotalExpenses",


            "Total_Budget_Syspro_FD": "TotalBudget",
            //Budget_Allocated_to_Events
            //Last_Event
            "Last_Milestone": "LastMilestone",
            "[tempdb].[dbo].[GetDateTime](cam.Last_Milestone_Date,'000000') LastMilestoneDate": "LastMilestoneDate",
            "Next_Milestone": "NextMilestone",
            //Last_Email_Filter_ID
            //Email_Filter_Count
            //Last_Fax_Filter_ID
            //Fax_Filter_Count
            //Last_Web_Filter_ID
            //Web_Filter_Count
            "Auto_Start_Syspro_TF": "AutomaticallyStarts",
            "[tempdb].[dbo].[GetDateTime](cam.Auto_Start_Date,'000000') AutomaticallyStartsOn": "AutomaticallyStartsOn",
            //Auto_Start_Job_Number
            "Auto_End_Syspro_TF": "AutomaticallyEnds",
            "[tempdb].[dbo].[GetDateTime](cam.Auto_End_Date,'000000') AutomaticallyEndsOn": "AutomaticallyEndsOn",
            //Auto_End_Job_Number
            "cam.Notes": "CampaignNotes",
            "cam.Created_Date": "CreatedDate",
            "ms_createdby.NewValTable CreatedBy": "CreatedBy",
            "cam.Modified_Date": "ModifiedDate",
            "ms_modifiedby.NewValTable ModifiedBy ": "ModifiedBy"
            //of campaign table in new crm
            //[MarketPopulation]
            //[TotalResponses]
            //[ResponseRate]
            //[CostPerResponse]
            //[CostPerNewAccount]
            //[TotalNewAccounts]
            //[TotalGrossPendingSales]
            //[TotalWeightedPendingSales]
            //[WinRate]
            //[LossRate]
            //[AverageSalesCycle]
            //[GrossProfit]
            //[GrossProfitRatio]
            //[AssignStartCampaign]
        }
    },
    //migrate [dbo].[milest] to wof_Milestone_Status
    {
        "Id": 1021,
        "Source": {
            "Tables": "[dbo].[milest] milest",
            "OrderBy": "order by Parent_Record_Type",
            "JoinUser": "Created_By,Modified_By"
        },
        "Destination": {
            "Tables": "wof_Milestone_Status"
        },
        "Map": {
            "Parent_Record_Type": "ModuleID",
            "Parent_Record_ID_Syspro_FBI": "RecID",
            "Milestone_ID": "MilestoneID",
            "Status": "StatusID",
            "[tempdb].[dbo].[GetDateTime](milest.Completed_Date,'000000') CompletedDate": "CompletedDate",
            "milest.Notes": "Notes",
            "milest.Created_Date": "CreatedDate",
            "ms_createdby.NewValTable CreatedUserID": "CreatedUserID",
            "milest.Modified_Date": "UpdatedDate",
            "ms_modifiedby.NewValTable UpdatedUserID ": "UpdatedUserID"
        }
    },
    //migrate [dbo].[act] to act_Activity
    {
        "Id": 1022,
        "Source": {
            "Tables": "[dbo].[act] act",
            "OrderBy": "order by Activity_ID",
            "Join": "outer apply (select top 1 * from [dbo].[HTMLNotes] HTMLNotes where HTMLNotes.Record_ID = act.Activity_ID and HTMLNotes.Record_Type = 34) as HTMLNotes", //module activity
            "Join1": "left join [adaptv3system].[dbo].[acttp] acttp on acttp.Activity_Type_ID = act.Activity_Type",
            "JoinUser": "Performed_By"
        },
        "Destination": {
            "Tables": "act_Activity",
            "Script": "QueryCRM_UpdateActivityNotes.txt"
        },
        "Map": {
            "Activity_ID_Syspro_FBI": "ActivityID",
            "act.Account_Number_Syspro_FBI": "AccountNumber",
            "Contact_Number_Syspro_FBI": "ContactNumber",
            "Related_Account_Number_Syspro_FBI": "RelatedAccountNumber",
            "Related_Contact_Number_Syspro_FBI": "RelatedContactNumber",
            "Regarding": "Regarding",
            "Regarding_Record_ID_Syspro_FBI": "RegardingID",
            "Primary_Source": "PrimarySourceID",
            "Secondary_Source": "SecondarySourceID",
            "Marketing_Campaign": "CampaignNumber",
            "Marketing_Event": "EventNumber",
            "Subject": "Subject",
            "convert(date,[tempdb].[dbo].[GetDateTime](act.Activity_Date,act.Activity_Time)) ActivityDate": "ActivityDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](act.Activity_Date,act.Activity_Time)) ActivityTime": "ActivityTime",
            "convert(bigint, Duration) Duration": "Duration",
            "ms_performedby.NewValTable PerformedUserID": "PerformedUserID",
            "Location": "Location",
            "case when acttp.Activity_Type_ID is null then null else act.Activity_Type end ActivityTypeID": "ActivityTypeID",
            "act.Medium": "Medium",
            "Attached_Record_ID_Syspro_FBI": "AttachedRecordID",
            "act.Direction": "Direction",
            "Activity_Result": "ActivityResultID",
            "Private_Syspro_TF": "IsPrivate",
            "Web_Message_Read_Syspro_TF": "IsWebMessageRead",
            "Last_Email_Address_ID": "LastEmailAddressID",
            "Last_Email_Attachment_ID": "LastEmailAttachmentID",
            "Email_To_Count": "EmailToCount",
            "Email_CC_Count": "EmailCCCount",
            "Email_BCC_Count": "EmailBCCCount",
            "Email_Attachment_Count": "EmailAttachmentCount",
            "Email_Sent_Received_Syspro_TF": "IsEmailSentReceived",
            "Ticket_Labor_Record": "TicketLaborRecordID",
            "Note_Type": "NoteTypeID",
            "(case when HTMLNotes.Record_ID > 0 then case when convert(varchar(max),convert(varbinary(max),HTMLNotes.Note_Storage),1) like '0x3C00%' then convert(nvarchar(max),convert(varbinary(max),HTMLNotes.Note_Storage)) else convert(varchar(max),convert(varbinary(max),HTMLNotes.Note_Storage))end else case when RTRIM(LTRIM(convert(varchar(max),isnull(act.Notes,'')))) like '%' + CHAR(10) + '%' then Replace(RTRIM(LTRIM(convert(varchar(max),isnull(act.Notes,'')))), char(10), '<br/>') else  RTRIM(LTRIM(convert(varchar(max),isnull(act.Notes,'')))) end end) Notes": "Notes"
            //"act.Notes": "Notes",
        }
    },
    //migrate [dbo].[actaddr] to act_Activity_EmailSend
    {
        "Id": 1023,
        "Source": {
            "Tables": "[dbo].[actaddr] actaddr",
            "OrderBy": "order by Activity_ID",
            "JoinUser": "User_ID"
        },
        "Destination": {
            "Tables": "act_Activity_EmailSend"
        },
        "Map": {
            "Activity_ID_Syspro_FBI": "ActivityID",
            "actaddr.Account_Number_Syspro_FBI": "AccountNumber",
            "actaddr.Contact_Number_Syspro_FBI": "ContactNumber",
            //"Address_ID"
            //Address_Type
            "Send_To": "EmailSendTypeID",
            "Sequence_Number": "SeqNo",
            "ms_userid.NewValTable RecipientUserID": "RecipientUserID",
            "Recipient_Name": "RecipientName",
            "actaddr.Email_Address": "RecipientEmail"
        }
    },
    //migrate [dbo].[actatt] to act_Activity_Attachment
    {
        "Id": 1024,
        "Source": {
            "Tables": "[dbo].[actatt] actatt",
            "OrderBy": "order by Activity_ID"
        },
        "Destination": {
            "Tables": "act_Activity_Attachment"
        },
        "Map": {
            "Activity_ID_Syspro_FBI": "ActivityID",
            "Attachment_Type": "AttachTypeID",
            "Sequence_Number": "SeqNo",
            "File_Name": "FileName",
            "File_Name PhysicalName": "PhysicalName"
            //Document_Template_ID
            //Attachment_ID
        }
    },
    //migrate [dbo].[event] to eve_Event
    {
        "Id": 1025,
        "Source": {
            "Tables": "[dbo].[event] event",
            "OrderBy": "order by Event_ID",
            "JoinUser": "Performed_By,Created_By,Modified_By"
        },
        "Destination": {
            "Tables": "eve_Event"
        },
        "Map": {
            "Event_ID_Syspro_FBI": "EventID",
            "Campaign_ID_Syspro_FBI": "CampaignID",
            "Event_Type": "EventTypeID",
            "Event_Name": "EventName",
            "Performed_Syspro_TF": "IsPerformed",
            "[tempdb].[dbo].[GetDateTime](event.Performed_Date,event.Performed_Time) PerformedDateTime": "PerformedDateTime",
            "ms_performedby.NewValTable PerformedUserID": "PerformedUserID",
            "[tempdb].[dbo].[GetDateTime](event.Event_Date,event.Event_Time) EventDateTime": "EventDateTime",
            "Primary_Source": "PrimarySourceID",
            "Secondary_Source": "SecondarySourceID",
            "convert(decimal(10,2), Population) Population": "Population",
            "Add_to_Campaign_Total_Syspro_TF": "IsAddCampaignTotal",
            "Responses_Syspro_FD": "Responses",
            "[tempdb].[dbo].[GetDateTime](event.Last_Response_Date,'000000') LastResponseDate": "LastResponseDate",
            "Total_Sales_Syspro_FD": "TotalSales",
            "Total_Expenses_Syspro_FD": "TotalExpenses",
            "Total_Budget_Syspro_FD": "TotalBudget",
            "Accounts_Contacted": "AccountsContacted",
            "Accounts_Created": "AccountsCreated",
            "Total_Pipeline_Value_Syspro_FD": "TotalPipelineValue",
            "Total_Weighted_Pipeline_Value_Syspro_FD": "TotalWeightedPipelineValue",
            "Opportunities_Count": "OppCount",
            "Open_Opportunities_Count": "OpenOppCount",
            "Won_Opportunities_Count": "WonOppCount",
            "Lost_Opportunities_Count": "LostOppCount",
            "Total_Oppty_Days_to_Close": "TotalOpptyDaysClose",
            "event.Notes": "Notes",
            "event.Created_Date": "CreatedDate",
            "ms_createdby.NewValTable CreatedUserID": "CreatedUserID",
            "event.Modified_Date": "UpdatedDate",
            "ms_modifiedby.NewValTable UpdatedUserID ": "UpdatedUserID"
        }
    },
    //migrate [dbo].[event_contacts] to eve_Event_Contacts
    {
        "Id": 1026,
        "Source": {
            "Tables": "[dbo].[event_contacts] ec",
            "OrderBy": "order by Event_ID"
        },
        "Destination": {
            "Tables": "eve_Event_Contacts"
        },
        "Map": {
            "Event_ID_Syspro_FBI": "EventID",
            "Account_Number_Syspro_FBI": "AccountNumber",
            "Contact_Number_Syspro_FBI": "ContactNumber",
            "Outbound_Contact_Syspro_TF": "IsOutboundContact",
            "Contacted_Syspro_TF": "IsContacted",
            "[tempdb].[dbo].[GetDateTime](ec.Contacted_Date,ec.Contacted_Time) ContactedDate": "ContactedDate",
            "Responded_Syspro_TF": "IsResponded",
            "[tempdb].[dbo].[GetDateTime](ec.Responded_Date,ec.Responded_Time) RespondedDate": "RespondedDate"
        }
    },
    //migrate [dbo].[evenacct] to eve_Event_Accounts
    {
        "Id": 1027,
        "Source": {
            "Tables": "[dbo].[evenacct] evenacct",
            "OrderBy": "order by Event_ID"
        },
        "Destination": {
            "Tables": "eve_Event_Accounts"
        },
        "Map": {
            "Event_ID_Syspro_FBI": "EventID",
            "Account_ID_Syspro_FBI": "AccountNumber",
            "New_Account_Syspro_TF": "IsNewAccount",
            "Contacted_Syspro_TF": "IsContacted",
            "[tempdb].[dbo].[GetDateTime](evenacct.Contacted_Date,evenacct.Contacted_Time) ContactedDate": "ContactedDate",
            "Responded_Syspro_TF": "IsResponded",
            "[tempdb].[dbo].[GetDateTime](evenacct.Responded_Date,evenacct.Responded_Time) RespondedDate": "RespondedDate"
        }
    },
    //migrate [dbo].[tasks] to tas_Task
    {
        "Id": 1028,
        "Source": {
            "Tables": "[dbo].[tasks] tasks",
            "OrderBy": "order by Task_ID",
            "JoinUser": "Assigned_To,Assigned_From,Created_By,Modified_By"
        },
        "Destination": {
            "Tables": "tas_Task"
        },
        "Map": {
            "Task_ID_Syspro_FBI": "TaskID",
            "tasks.Account_Number_Syspro_FBI": "AccountNumber",
            "Contact_Number_Syspro_FBI": "ContactNumber",
            "Related_Account_Number_Syspro_FBI": "RelatedAccountNumber",
            "Related_Contact_Number_Syspro_FBI": "RelatedContactNumber",
            "Regarding": "Regarding",
            "Regarding_Record_ID_Syspro_FBI": "RegardingID",
            "Subject": "Subject",
            "Task_Status": "TaskStatusID",
            "Open_Task_Flag_Syspro_TF": "IsOpenTaskFlag",
            "Task_Type": "TaskTypeID",
            "Percent_Complete": "PercentComplete",
            "ms_assignedto.NewValTable AssignedFrom": "AssignedFrom",
            "ms_assignedfrom.NewValTable AssignedTo": "AssignedTo",
            "Priority": "PriorityID",
            "[tempdb].[dbo].[GetDateTime](tasks.Due_Date,tasks.Due_Time) DueDateTime": "DueDateTime",
            "[tempdb].[dbo].[GetDateTime](tasks.Assigned_Date,tasks.Assigned_Time) AssignedDateTime": "AssignedDateTime",
            "[tempdb].[dbo].[GetDateTime](tasks.Started_Date,tasks.Started_Time) StartedDateTime": "StartedDateTime",
            "[tempdb].[dbo].[GetDateTime](tasks.Completed_Date,tasks.Completed_Time) CompletedDateTime": "CompletedDateTime",
            //[Notify_Upon_Accept]
            //[Notifiy_Upon_Decline]
            //[Notify_Upon_Complete]
            //[Notify_Upon_Re_Assign]
            "Private_Syspro_TF": "IsPrivate",
            "Create_Alarm_Syspro_TF": "IsCreateAlarm",
            "Alarm_Time": "AlarmTime",
            "Alarm_Units": "AlarmUnitID",
            "Alarm_ID_Syspro_FBI": "AlarmID",
            "Invitation_Response": "InvitationResponseID",
            "[tempdb].[dbo].[GetDateTime](tasks.Response_Date,tasks.Response_Time) ResponseDateTime": "ResponseDateTime",
            //Process_ID
            "tasks.Notes": "Notes",
            "tasks.Created_Date": "CreatedDate",
            "ms_createdby.NewValTable CreatedUserID": "CreatedUserID",
            "tasks.Modified_Date": "UpdatedDate",
            "ms_modifiedby.NewValTable UpdatedUserID ": "UpdatedUserID"
        }
    },
    //migrate [dbo].[appt] to app_Appointment
    {
        "Id": 1029,
        "Source": {
            "Tables": "[dbo].[appt] appt",
            "OrderBy": "order by Appointment_ID",
            "Join": "left join adaptv3system..userloc ul on ul.Location_Name = appt.Location",
            "JoinUser": "Assigned_To_User,Created_By,Modified_By"
        },
        "Destination": {
            "Tables": "app_Appointment"
        },
        "Map": {
            "Appointment_ID_Syspro_FBI": "AppointmentID",
            "appt.Account_Number_Syspro_FBI": "AccountNumber",
            "Contact_Number_Syspro_FBI": "ContactNumber",
            "Related_Account_Number_Syspro_FBI": "RelatedAccountNumber",
            "Related_Contact_Number_Syspro_FBI": "RelatedContactNumber",
            "Regarding": "Regarding",
            "Regarding_Record_ID_Syspro_FBI": "RegardingRecordID",
            "Subject": "Subject",
            "Activity_Type": "ActivityTypeID",
            "Completed_Syspro_TF": "IsCompleted",
            "ms_assignedtouser.NewValTable AssignToUserID": "AssignToUserID",
            "Required_Attendee_Count": "RequiredAttendeeCount",
            "Optional_Attendee_Count": "OptionalAttendeeCount",
            "[tempdb].[dbo].[GetDateTime](appt.Start_Date,appt.Start_Time) StartDate": "StartDate",
            "[tempdb].[dbo].[GetDateTime](appt.End_Date,appt.End_Time) EndDate": "EndDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](appt.Start_Date,appt.Start_Time)) StartTime": "StartTime",
            "convert(time,[tempdb].[dbo].[GetDateTime](appt.End_Date,appt.End_Time)) EndTime": "EndTime",
            "All_Day_Appointment_Syspro_TF": "IsAllDayAppointment",
            "ul.Location_ID": "LocationID",
            "Priority": "PriorityID",
            "Show_As": "ShowAs",
            "Private_Syspro_TF": "IsPrivate",
            "Can_Be_Postponed_Syspro_TF": "IsCanBePostponed",
            "[tempdb].[dbo].[GetDateTime](appt.Postpone_Date_Limit,appt.Postpone_Time_Limit) PostponeDateLimit": "PostponeDateLimit",
            "convert(time,[tempdb].[dbo].[GetDateTime](appt.Postpone_Date_Limit,appt.Postpone_Time_Limit)) PostponeTimeLitmit": "PostponeTimeLitmit",
            "Alarm_Syspro_TF": "IsAlarm",
            "Alarm_Time": "AlarmDate",
            "Alarm_Units": "AlarmUnits",
            "Recurring_Syspro_TF": "IsRecurring",
            "Notify_When_Accepted_Syspro_TF": "IsNotifyWhenAccepted",
            "Notify_if_Declined_Syspro_TF": "IsNotifyIfDeclined",
            "Notify_When_Completed_Syspro_TF": "IsNotifyWhenCompleted",
            "Notify_if_Rescheduled_Syspro_TF": "IsNotifyIfRescheduled",
            "Allowed_to_Decline_Syspro_TF": "IsAllowedToDecline",
            "Allowed_to_Reschedule_Syspro_TF": "IsAllowedToReschedule",
            //Process_Instance_ID
            "appt.Notes": "Notes",
            "appt.Created_Date": "CreatedDate",
            "ms_createdby.NewValTable CreatedUserID": "CreatedUserID",
            "appt.Modified_Date": "UpdatedDate",
            "ms_modifiedby.NewValTable UpdatedUserID ": "UpdatedUserID"
        }
    },
    //migrate [dbo].[apptattd] to app_Appointment_Attendee
    {
        "Id": 1030,
        "Source": {
            "Tables": "[dbo].[apptattd] apptattd",
            "OrderBy": "order by Appointment_ID",
            "JoinUser": "User_ID"
        },
        "Destination": {
            "Tables": "app_Appointment_Attendee"
        },
        "WhereGlobal": "UserID > 0",
        "Map": {
            "Appointment_ID_Syspro_FBI": "AppointmentID",
            "IsNull(ms_userid.NewValTable,0) UserID": "UserID",
            "Invitation_Status": "InvitationStatus",
            "convert(bigint,Appointment_ID) FirstAppointmentID": "FirstAppointmentID"
        }
    },
    //migrate [dbo].[apptcal] to app_Appointment_Calendar
    {
        "Id": 1031,
        "Source": {
            "Tables": "[dbo].[apptcal] apptcal",
            "OrderBy": "order by Appointment_ID",
            "JoinUser": "User_ID"
        },
        "Destination": {
            "Tables": "app_Appointment_Calendar"
        },
        "Map": {
            "Appointment_ID_Syspro_FBI": "AppointmentID",
            "ms_userid.NewValTable UserID": "UserID",
            "Completed_Syspro_TF": "IsCompleted",
            "Calendar_Record_Type": "CalendarRecordTypeID",
            "[tempdb].[dbo].[GetDateTime](apptcal.Date,'000000') Date": "Date",
            "All_Day_Event_Syspro_TF": "IsAllDayEvent",
            "[tempdb].[dbo].[GetTime](apptcal.Start_Time) StartTime": "StartTime",
            "[tempdb].[dbo].[GetTime](apptcal.End_Time) EndTime": "EndTime",
            "Invitation_Status": "InvitationStatus",
            "[tempdb].[dbo].[GetDateTime](apptcal.Invited_Date,apptcal.Invited_Time) InvitedDate": "InvitedDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](apptcal.Invited_Date,apptcal.Invited_Time)) InvitedTime": "InvitedTime",
            "Invitation_Response": "InvitationResponse",
            "[tempdb].[dbo].[GetDateTime](apptcal.Response_Date,apptcal.Response_Time) ResponseDate": "ResponseDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](apptcal.Response_Date,apptcal.Response_Time)) ResponseTime": "ResponseTime",
            "RTRIM(LTRIM(convert(varchar(max),isnull(Response_Notes,'')))) ResponseNotes": "ResponseNotes",
            "convert(bigint,Appointment_ID) FirstAppointmentID": "FirstAppointmentID"
        }
    },
    //migrate [dbo].[recur] to app_Recurrence
    {
        "Id": 1032,
        "Source": {
            "Tables": "[dbo].[recur] recur",
            "OrderBy": "order by Appointment_ID",
            "Join": "left join adaptv3system..userloc ul on ul.Location_Name = recur.Location",
            "JoinUser": "Assigned_From,Assigned_To"
        },
        "Destination": {
            "Tables": "app_Recurrence"
        },
        "Map": {
            "Appointment_ID_Syspro_FBI": "AppointmentID",
            "ms_assignedto.NewValTable AssignedTo": "AssignedTo",
            "ms_assignedfrom.NewValTable AssignedFrom": "AssignedFrom",
            "Activity_Type": "ActivityTypeID",
            "Subject": "Subject",
            "convert(varchar,ul.Location_ID) LocationID": "LocationID",
            "Priority": "PriorityID",
            "Show_As": "ShowAs",
            "Private_Syspro_TF": "IsPrivate",
            "recur.Account_Number_Syspro_FBI": "AccountNumber",
            "Contact_Number_Syspro_FBI": "ContactNumber",
            "Related_Account_Number_Syspro_FBI": "RelatedAccountNumber",
            "Related_Contact_Number_Syspro_FBI": "RelatedContactNumber",
            "Regarding_Type": "RegardingTypeID",
            "Regarding_ID_Syspro_FBI": "RegardingID",
            "Create_Alarm_Syspro_TF": "IsCreateAlarm",
            "Alarm_Period": "AlarmPeriod",
            "Alarm_Units": "AlarmUnits",
            "Required_Attendee_Count": "RequiredAttendeeCount",
            "Optional_Attendee_Count": "OptionalAttendeeCount",
            "Allowed_to_Reschedule_Syspro_TF": "IsAllowedToReschedule",
            "[tempdb].[dbo].[GetTime](recur.Appointment_Start_Time) AppointmentStartTime": "AppointmentStartTime",
            "[tempdb].[dbo].[GetTime](recur.Appointment_End_Time) AppointmentEndTime": "AppointmentEndTime",
            "All_Day_Appointment_Syspro_TF": "IsAllDayAppointment",
            "Number_of_Days": "NumberOfDays",
            "Recurrence_Pattern": "RecurrencePattern",
            "Daily__Day_Count": "DailyDayCount",
            "Daily__Day_Units": "DailyDayUnits",
            "Weekly__Week_Count": "WeeklyWeekCount",
            "Weekly__Sunday_Syspro_TF": "IsWeeklySunday",
            "Weekly__Monday_Syspro_TF": "IsWeeklyMonday",
            "Weekly__Tuesday_Syspro_TF": "IsWeeklyTuesday",
            "Weekly__Wednesday_Syspro_TF": "IsWeeklyWednesday",
            "Weekly__Thursday_Syspro_TF": "IsWeeklyThursday",
            "Weekly__Friday_Syspro_TF": "IsWeeklyFriday",
            "Weekly__Saturday_Syspro_TF": "IsWeeklySaturday",
            "Monthly__Pattern_Type": "MonthlyPatternTypeID",
            "Monthly__Fixed_Day_of_Month": "MonthFixedDayOfMonth",
            "Monthly__Fixed_Month_Count": "MonthFixedMonthCount",
            "Monthly__Relative_Day_of_Month": "MonthlyRelativeDayOfMonth",
            "Monthly__Relative_Day_of_Week": "MonthlyRelativeDayOfWeek",
            "Monthly__Relative_Month_Count": "MonthlyRelativeMonthCount",
            "Yearly__Pattern_Type": "YearlyPatternTypeID",
            "Yearly__Fixed_Month_Number": "YearlyFixedMonthNumber",
            "Yearly__Fixed_Day_Number": "YearlyFixedDayNumber",
            "Yearly__Relative_Day_of_Month": "YearlyRelativeDayOfMonth",
            "Yearly__Relative_Day_of_Week": "YearlyRelativeDayOfWeek",
            "Yearly__Relative_Month_Number": "YearlyRelativeMonthNumber",
            "[tempdb].[dbo].[GetDateTime](recur.Recurrence_Start_Date,'000000') RecurrenceStartDate": "RecurrenceStartDate",
            "Recurrence_Ends": "RecurrenceEnds",
            "[tempdb].[dbo].[GetDateTime](recur.Recurrence_End_Date,'000000') RecurrenceEndDate": "RecurrenceEndDate",
            "Recurrence_End_Count": "RecurrenceEndCount",
            "RTRIM(LTRIM(convert(varchar(max),isnull(Appointment_Notes,'')))) AppointmentNotes": "AppointmentNotes"
        }
    },
    //migrate [dbo].[recattd] to app_Recurrence_Attendee
    {
        "Id": 1033,
        "Source": {
            "Tables": "[dbo].[recattd] recattd",
            "OrderBy": "order by Recurring_Pattern_ID",
            "JoinUser": "User_ID"
        },
        "Destination": {
            "Tables": "app_Recurrence_Attendee"
        },
        "Map": {
            "Recurring_Pattern_ID": "RecurringPatternID",
            "ms_userid.NewValTable UserID": "UserID",
            "Invitation_Status": "InvitationStatus"
        }
    },
    //migrate [dbo].[recurser] to app_Recurrence_Series
    {
        "Id": 1034,
        "Source": {
            "Tables": "[dbo].[recurser] recurser",
            "OrderBy": "order by Series_Appointment_ID"
        },
        "Destination": {
            "Tables": "app_Recurrence_Series"
        },
        "Map": {
            "Series_Appointment_ID_Syspro_FBI": "SeriesAppointmentID",
            "Recurrence_Appointment_ID_Syspro_FBI": "RecurrenceAppointmentID",
            "Last_Recurrence_in_Series_Syspro_TF": "IsLastRecurrenceInSeries"
        }
    },
    //migrate [dbo].[job_recur] to rpt_Job_Recurrence
    {
        "Id": 1035,
        "Source": {
            "Tables": "[dbo].[job_recur] jr",
            "OrderBy": "order by Job_ID"
        },
        "Destination": {
            "Tables": "rpt_Job_Recurrence"
        },
        "Map": {
            "Job_ID_Syspro_FBI": "JobQueueID",
            "Recurrence_Pattern": "RecurrencePattern",
            "Daily__Day_Count": "DailyDayCount",
            "Daily__Day_Units": "DailyDayUnits",
            "Weekly__Week_Count": "WeeklyWeekCount",
            "Weekly__Sunday_Syspro_TF": "IsWeeklySunday",
            "Weekly__Monday_Syspro_TF": "IsWeeklyMonday",
            "Weekly__Tuesday_Syspro_TF": "IsWeeklyTuesday",
            "Weekly__Wednesday_Syspro_TF": "IsWeeklyWednesday",
            "Weekly__Thursday_Syspro_TF": "IsWeeklyThursday",
            "Weekly__Friday_Syspro_TF": "IsWeeklyFriday",
            "Weekly__Saturday_Syspro_TF": "IsWeeklySaturday",
            "Monthly__Pattern_Type": "MonthlyPatternTypeID",
            "Monthly__Fixed_Day_of_Month": "MonthFixedDayOfMonth",
            "Monthly__Fixed_Month_Count": "MonthFixedMonthCount",
            "Monthly__Relative_Day_of_Month": "MonthlyRelativeDayOfMonth",
            "Monthly__Relative_Day_of_Week": "MonthlyRelativeDayOfWeek",
            "Monthly__Relative_Month_Count": "MonthlyRelativeMonthCount",
            "Yearly__Pattern_Type": "YearlyPatternTypeID",
            "Yearly__Fixed_Month_Number": "YearlyFixedMonthNumber",
            "Yearly__Fixed_Day_Number": "YearlyFixedDayNumber",
            "Yearly__Relative_Day_of_Month": "YearlyRelativeDayOfMonth",
            "Yearly__Relative_Day_of_Week": "YearlyRelativeDayOfWeek",
            "Yearly__Relative_Month_Number": "YearlyRelativeMonthNumber",
            "[tempdb].[dbo].[GetDateTime](jr.Recurrence_Start_Date,'000000') RecurrenceStartDate": "RecurrenceStartDate",
            "Recurrence_Ends": "RecurrenceEnds",
            "[tempdb].[dbo].[GetDateTime](jr.Recurrence_End_Date,'000000') RecurrenceEndDate": "RecurrenceEndDate",
            "Recurrence_End_Count": "RecurrenceEndCount"
        }
    },
    //migrate [dbo].[sales_goals] to opp_Sale_Goal
    {
        "Id": 1036,
        "Source": {
            "Tables": "[dbo].[sales_goals] sg",
            "OrderBy": "order by Goal_Record_ID",
            "JoinUser": "Salesperson"
        },
        "Destination": {
            "Tables": "opp_Sale_Goal"
        },
        "Map": {
            "Goal_Record_ID": "SaleGoalID",
            "ms_salesperson.NewValTable SalePersonUserID": "SalePersonUserID",
            "Applies_To_Account": "WhichAccountTypeID",
            "Account_Type": "AccontTypeID",
            "sg.Account_Number_Syspro_FBI": "AccountNumber",
            "Applies_To_Location": "WhichLocationTypeID",
            "Region": "RegionID",
            "Territory": "TerritoryID",
            "Applies_To_Item": "WhichItemTypeID",
            "Item_Class": "ItemClassID",
            "Item_Number": "ItemNumber",
            "[tempdb].[dbo].[GetDateTime](sg.Date_From,'000000') FromDate": "FromDate",
            "[tempdb].[dbo].[GetDateTime](sg.Date_To,'000000') ToDate": "ToDate",
            "Amount_Syspro_FD": "Amount"
            //TotalPendingSales
            //TotalActualSales
        }
    },
    /*migrate tab in record*/
    //MODULE ACCOUNT AND CONTACT
    //migrate [dbo].[relacct] to acc_Relationship_Account
    {
        "Id": 2000,
        "Source": {
            "Tables": "[dbo].[relacct] r",
            "OrderBy": "order by Relationship_Record_ID",
            "JoinUser": "Reported_By"
        },
        "Destination": {
            "Tables": "acc_Relationship_Account"
        },
        "Map": {
            "Relationship_Record_ID_Syspro_FBI": "RelationshipRecordID",
            "Primary_Account_Syspro_FBI": "PrimaryAccountNumber",
            "Primary_Contact_Syspro_FBI": "PrimaryContactNumber",
            "Related_Account_Syspro_FBI": "RelatedAccountNumber",
            "Related_Contact_Syspro_FBI": "RelatedContactNumber",
            "Relationship_Name_ID": "RelationshipChoiceID",
            "[tempdb].[dbo].[GetDateTime](Date_Reported,Time_Reported) RelationshipDiscoveredDate": "RelationshipDiscoveredDate",
            "Direction": "DirectionID",
            "r.Notes": "Notes",
            "Reverse_Record_ID": "ReverseRecordID",
            "ms_reportedby.NewValTable CreatedUserID": "CreatedUserID",
            "ms_reportedby.NewValTable UpdatedUserID ": "UpdatedUserID"
        }
    },
    //MODULE SERVICE TICKET
    //migrate [dbo].[ticket_labor] to set_Ticket_Labor
    {
        "Id": 2001,
        "Source": {
            "Tables": "[dbo].[ticket_labor] tl",
            "OrderBy": "order by Service_Ticket_Number",
            "JoinUser": "Performed_By"
        },
        "Destination": {
            "Tables": "set_Ticket_Labor"
        },
        "Map": {
            "Service_Ticket_Number_Syspro_FBI": "ServiceTicketNumber",
            //Record_ID
            "[tempdb].[dbo].[GetDateTime](Work_Date,'000000') WorkDate": "WorkDate",
            "[tempdb].[dbo].[GetTime](Start_Time) StartTime": "StartTime",
            "[tempdb].[dbo].[GetTime](End_Time) EndTime": "EndTime",
            "Job_Type_ID": "JobTypeID",
            "ms_performedby.NewValTable PerformedUserID": "PerformedUserID",
            //Description_of_Work
            "Time_Units": "TimeUnitTypeID",
            "Standard_Time_Unit_Fee_Syspro_FD": "StandardTimeUnitFee",
            "Overtime_Unit_Fee_Syspro_FD": "OvertimeUnitFee",
            "Other_Time_Unit_Fee_Syspro_FD": "OtherTimeUnitFee",
            "Standard_Unit_Cost_Syspro_FD": "StandardUnitCost",
            "Overtime_Unit_Cost_Syspro_FD": "OvertimeUnitCost",
            "Other_Time_Unit_Cost_Syspro_FD": "OtherTimeUnitCost",
            "Standard_Time_Duration_Syspro_FD": "StandardTimeDuration",
            "Overtime_Duration_Syspro_FD": "OvertimeDuration",
            "Other_Time_Duration_Syspro_FD": "OtherTimeDuration",
            "Non_Billed_Time_Duration_Syspro_FD": "NonBilledTimeDuration",
            "Taxable_Syspro_TF": "IsTaxable",
            "Tax_Schedule": "TaxScheduleID",
            "tl.Notes": "Notes"
        }
    },
    //migrate [dbo].[ticket_parts] to set_Ticket_Part
    {
        "Id": 2002,
        "Source": {
            "Tables": "[dbo].[ticket_parts] tp",
            "OrderBy": "order by tp.Ticket_Number",
            "Join": "left join [dbo].ticket_parts_extra tpe on tpe.Ticket_Number = tp.Ticket_Number"
        },
        "Destination": {
            "Tables": "set_Ticket_Part"
        },
        "Map": {
            "tp.Ticket_Number_Syspro_FBI": "ServiceTicketNumber",
            //Record_ID
            "Part_Type": "PartTypeID",
            "Item_Number": "ItemNumber",
            "Item_Description": "ItemDescription",
            "Serial_Number": "SerialNumber",
            "Lot_Number": "LotNumber",
            "Quantity_Syspro_FD": "Quantity",
            "Effect_On_Components": "EffectComponentTypeID",
            "Replaced_Component_ID_Syspro_FD": "ReplacedComponentID",
            "Replacement_Component_ID_Syspro_FD": "ReplacementComponentID",
            "Unit_Cost_Syspro_FD": "UnitCost",
            "Unit_Price_Syspro_FD": "UnitPrice",
            "Discount_Syspro_FD": "Discount",
            "Discount_Method": "DiscountMethodTypeID",
            "Taxable_Syspro_TF": "IsTaxable",
            "Tax_Schedule_ID": "TaxScheduleID",
            "Tax_Rate_Syspro_FD": "TaxRate",
            "Warehouse": "Warehouse",
            "tp.Notes": "Notes",
            "tpe.Part_Status": "TicketPartStatusID",
            "tpe.Inventory_Location": "InventoryLocationID"
        }
    },
    //migrate expense tab in service ticket
    //migrate [dbo].[expenses] to utl_Expense
    {
        "Id": 2003,
        "Source": {
            "Tables": "[dbo].[expenses] e",
            "OrderBy": "order by Parent_Record_Type",
            "JoinUser": "Reported_By"
        },
        "Destination": {
            "Tables": "utl_Expense"
        },
        "Map": {
            "Parent_Record_Type": "ModuleID",
            "Parent_Record_Number_Syspro_FD": "ModuleRecID",
            //Expense_Record_ID
            "[tempdb].[dbo].[GetDateTime](Expense_Date,Expense_Time) ExpenseDate": "ExpenseDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](Expense_Date,Expense_Time)) ExpenseTime": "ExpenseTime",
            "ms_reportedby.NewValTable ReportedUserID": "ReportedUserID",
            "Expense_Category": "ExpenseCategoryID",
            "Description": "Description",
            "Cost_Per_Mile_Syspro_FD": "CostPerMile",
            "Starting_Mileage": "StartingMileage",
            "Ending_Mileage": "EndingMileage",
            "Amount_Syspro_FD": "Amount",
            "Billable_Syspro_TF": "IsBillable",
            "Billable_Amount_Syspro_FD": "BillableAmount",
            "Taxable_Syspro_TF": "IsTaxable",
            "Tax_Schedule": "TaxScheduleID",
            "e.Notes": "Notes"
        }
    },
    //migrate [dbo].[oppcon] to opp_Opportunity_Contact
    {
        "Id": 2004,
        "Source": {
            "Tables": "[dbo].[oppcon] oppcon",
            "OrderBy": "order by Opportunity_ID",
            "Join": "left join (select ROW_NUMBER() over (order by Job_Title) JobTitleID ,*  from [adaptv3system].[dbo].jobtitle) as jt on jt.Job_Title = oppcon.Job_Title",
            "Join1": "left join (select ROW_NUMBER() over (order by Department_Name) DepartmentID,*  from [adaptv3system].[dbo].dept) as dept on dept.Department_Name = oppcon.Department",
            "JoinUser": "Created_By,Modified_By"
        },
        "Destination": {
            "Tables": "opp_Opportunity_Contact"
        },
        "Map": {
            "Opportunity_ID_Syspro_FBI": "OpportunityNumber",
            //Record_ID
            "Contact_Number_Syspro_FBI": "ContactNumber",
            "jt.JobTitleID": "JobTitleID",
            "dept.DepartmentID": "DepartmentID",
            "Decision_Role": "DecisionAuthorityID",
            "[tempdb].[dbo].[ConvertPhoneFax](oppcon.Phone,'') Phone": "Phone",
            "oppcon.Phone_Extension": "PhoneExtension",
            "[tempdb].[dbo].[ConvertPhoneFax](oppcon.Fax,'') Fax": "Fax",
            "oppcon.Fax_Extension": "FaxExtension",
            "Email": "Email",
            "oppcon.Notes": "Notes",
            "oppcon.Created_Date": "CreatedDate",
            "ms_createdby.NewValTable CreatedUserID": "CreatedUserID",
            "oppcon.Modified_Date": "UpdatedDate",
            "ms_modifiedby.NewValTable UpdatedUserID ": "UpdatedUserID"
        }
    },
    //migrate [dbo].[oppcmp] to opp_Opportunity_Competitor
    {
        "Id": 2005,
        "Source": {
            "Tables": "[dbo].[oppcmp] oppcmp",
            "OrderBy": "order by Record_Number",
            "JoinUser": "Reported_By,Created_By,Modified_By"
        },
        "Destination": {
            "Tables": "opp_Opportunity_Competitor"
        },
        "Map": {
            "convert(int,Record_Number) OppCompetitorID": "OppCompetitorID",
            "Opportunity_Number_Syspro_FBI": "OpportunityNumber",
            "Competitor_ID": "CompetitorID",
            "Competitor_Name": "OppCompetitorName",
            "convert(date,[tempdb].[dbo].[GetDateTime](Date_Reported,'000000')) DateReported": "DateReported",
            "ms_reportedby.NewValTable ReportedUserID": "ReportedUserID",
            "Our_Competitive_Strength": "OurCompetitiveStrengthTypeID",
            "Importance_to_Customer": "ImportanceToCustomerTypeID",
            "Last_Strength_ID": "LastCompetingStrengthID",
            "Last_Weakness_ID": "LastCompetingWeaknessID",
            "oppcmp.Notes": "Notes",
            "oppcmp.Created_Date": "CreatedDate",
            "ms_createdby.NewValTable CreatedUserID": "CreatedUserID",
            "oppcmp.Modified_Date": "UpdatedDate",
            "ms_modifiedby.NewValTable ModifiedBy ": "UpdatedUserID"
        }
    },
    //migrate [dbo].[oppcmpw] to opp_Opportunity_Competitor_Weakness
    {
        "Id": 2006,
        "Source": {
            "Tables": "[dbo].[oppcmpw] oppcmpw",
            "OrderBy": "order by Opportunity_Competitor_ID"
        },
        "Destination": {
            "Tables": "opp_Opportunity_Competitor_Weakness"
        },
        "Map": {
            "convert(int,Opportunity_Competitor_ID) OpportunityCompetitorID": "OpportunityCompetitorID",
            //"Weakness_ID"
            "Weakness_Name": "OppCompetitorWeaknessName",
            "oppcmpw.Notes": "Notes"
        }
    },
    //migrate [dbo].[oppcmps] to opp_Opportunity_Competitor_Strength
    {
        "Id": 2007,
        "Source": {
            "Tables": "[dbo].[oppcmps] oppcmps",
            "OrderBy": "order by Opportunity_Competitor_ID"
        },
        "Destination": {
            "Tables": "opp_Opportunity_Competitor_Strength"
        },
        "Map": {
            "convert(int,Opportunity_Competitor_ID) OpportunityCompetitorID": "OpportunityCompetitorID",
            //"Strength_ID"
            "Strength_Name": "OppCompetitorStrengthName",
            "oppcmps.Notes": "Notes"
        }
    },
    //migrate [dbo].[oppiss] to opp_Opportunity_Issue
    {
        "Id": 2008,
        "Source": {
            "Tables": "[dbo].[oppiss] oppiss",
            "OrderBy": "order by Record_Number",
            "JoinUser": "Reported_By"
        },
        "Destination": {
            "Tables": "opp_Opportunity_Issue"
        },
        "Map": {
            "convert(int,Record_Number) OppIssueID": "OppIssueID",
            "Opportunity_Number_Syspro_FBI": "OpportunityNumber",
            "Issue_Type": "IssueTypeID",
            "Issue_Name": "IssueName",
            "convert(date,[tempdb].[dbo].[GetDateTime](Date_Reported,'000000')) DateReported": "DateReported",
            "ms_reportedby.NewValTable ReportedUserID": "ReportedUserID",
            "Importance": "ImportanceToCustomerTypeID",
            "Competitive_Strength": "CompetitiveStrengthTypeID",
            "RTRIM(LTRIM(convert(varchar(max),isnull(Explanation,'')))) Explanation": "Explanation"
        }
    },
    //migrate [dbo].[oppassoc] to opp_Opportunity_Associated_Account
    {
        "Id": 2009,
        "Source": {
            "Tables": "[dbo].[oppassoc] oppassoc",
            "OrderBy": "order by Associated_Record_ID"
        },
        "Destination": {
            "Tables": "opp_Opportunity_Associated_Account"
        },
        "Map": {
            "Associated_Record_ID": "OppAssociatedID",
            "Opportunity_Number": "OpportunityNumber",
            "Associated_Account_Number": "AssociatedAccountNumber",
            "Associated_Contact_Number": "AssociatedContactNumber",
            "Association_Type": "AssociationTypeID",
            "[tempdb].[dbo].[GetDateTime](Date_Discovered,Time_Discovered) DiscoveredDate": "DiscoveredDate",
            "convert(time,[tempdb].[dbo].[GetDateTime](Date_Discovered,Time_Discovered)) DiscoveredTime": "DiscoveredTime",
            "oppassoc.Notes": "Notes"
        }
    },
    //migrate [dbo].[oppitem] to opp_Opportunity_Item
    {
        "Id": 2010,
        "Source": {
            "Tables": "[dbo].[oppitem] oppitem",
            "OrderBy": "order by Opportunity_Number",
            "JoinUser": "Created_By,Modified_By"
        },
        "Destination": {
            "Tables": "opp_Opportunity_Item"
        },
        "Map": {
            "Opportunity_Number_Syspro_FBI": "OpportunityNumber",
            "Line_Number": "LineNumber",
            "Sequence_Number": "SeqNo",
            "Item_Type": "ItemTypeID",
            "Item_Number": "ItemNumber",
            "Item_Description": "ItemDescription",
            "Unit_Price_Syspro_FD": "UnitPrice",
            "Discount_Syspro_FD": "Discount",
            "Unit_Initial_Cost_Syspro_FD": "UnitInitialCost",
            "Tax_Schedule_ID": "TaxScheduleID",
            "Tax_Rate_Syspro_FD": "TaxRate",
            "Discount_Method": "DiscountMethodTypeID",
            "Different_Close_Date_Syspro_TF": "IsDifferentCloseDate",
            "[tempdb].[dbo].[GetDateTime](Close_Date,'000000') CloseDate": "CloseDate",
            "Warehouse": "Warehouse",
            "Contact_Number_Syspro_FBI": "ContactNumber",
            "oppitem.Notes": "Notes",
            "oppitem.Created_Date": "CreatedDate",
            "ms_createdby.NewValTable CreatedUserID": "CreatedUserID",
            "oppitem.Modified_Date": "UpdatedDate",
            "ms_modifiedby.NewValTable UpdatedUserID ": "UpdatedUserID"
        }
    },
    //for campaign tab
    //migrate [dbo].[budget] to utl_Expense_Category_Budget
    {
        "Id": 2011,
        "Source": {
            "Tables": "[dbo].[budget] budget",
            "OrderBy": "order by Related_To"
        },
        "Destination": {
            "Tables": "utl_Expense_Category_Budget"
        },
        "Map": {
            "(case when Related_To = 0 then 1 when Related_To = 1 then 2 when Related_To = 2 then 5 when Related_To = 3 then 3 else 0 end) ModuleID": "ModuleID",
            "Related_To_Record_Number_Syspro_FBI": "ModuleRecordID",
            "Category": "ExpenseCategoryID",
            "Budget_Amount_Syspro_FD": "BudgetAmount",
            "budget.Notes": "Notes"
        }
    },
    //migrate [dbo].[exptot] to utl_Expense_Category_Total
    {
        "Id": 2012,
        "Source": {
            "Tables": "[dbo].[exptot] exptot",
            "OrderBy": "order by Related_To"
        },
        "Destination": {
            "Tables": "utl_Expense_Category_Total"
        },
        "Map": {
            "(case when Related_To = 0 then 1 when Related_To = 1 then 2 when Related_To = 2 then 5 when Related_To = 3 then 3 else 0 end) ModuleID": "ModuleID",
            "Related_To_Record_Number_Syspro_FBI": "ModuleRecordID",
            "Category_ID": "ExpenseCategoryID",
            "Total_Expenses_Syspro_FD": "TotalExpense",
        }
    },
    //migrate [dbo].[camp_account] to cam_Campaign_Account
    {
        "Id": 2013,
        "Source": {
            "Tables": "[dbo].[camp_account] camacc",
            "OrderBy": "order by Campaign_ID"
        },
        "Destination": {
            "Tables": "cam_Campaign_Account"
        },
        "Map": {
            "Campaign_ID_Syspro_FBI": "CampaignNumber",
            "Account_ID_Syspro_FBI": "AccountNumber",
            "Outbound_Account_Syspro_TF": "IsOutboundAccount",
            "New_Account_Syspro_TF": "IsNewAccount",
            "Contacted_Syspro_TF": "IsContacted",
            "[tempdb].[dbo].[GetDateTime](camacc.Contacted_Date,camacc.Contacted_Time) ContactedDate": "ContactedDate",
            "Responded_Syspro_TF": "IsResponded",
            "[tempdb].[dbo].[GetDateTime](camacc.Responded_Date,camacc.Responded_Time) RespondedDate": "RespondedDate",
            "Phone_Process_Triggered_Syspro_TF": "IsPhoneProcessTriggered",
            "Email_Process_Triggered_Syspro_TF": "IsEmailProcessTriggered",
            "Fax_Process_Triggered_Syspro_TF": "IsFaxProcessTriggered",
            "Web_Process_Triggered_Syspro_TF": "IsWebProcessTriggered"
        }
    },
    //migrate [dbo].[camp_contact] to cam_Campaign_Contact
    {
        "Id": 2014,
        "Source": {
            "Tables": "[dbo].[camp_contact] camct",
            "OrderBy": "order by Campaign_ID"
        },
        "Destination": {
            "Tables": "cam_Campaign_Contact"
        },
        "Map": {
            "Campaign_ID_Syspro_FBI": "CampaignNumber",
            "Account_Number_Syspro_FBI": "AccountNumber",
            "Contact_Number_Syspro_FBI": "ContactNumber",
            "Outbound_Contact_Syspro_TF": "IsOutboundContact",
            "Contacted_Syspro_TF": "IsContacted",
            "[tempdb].[dbo].[GetDateTime](camct.Contacted_Date,camct.Contacted_Time) ContactedDate": "ContactedDate",
            "Responded_Syspro_TF": "IsResponded",
            "[tempdb].[dbo].[GetDateTime](camct.Responded_Date,camct.Responded_Time) RespondedDate": "RespondedDate",
            "Phone_Process_Triggered_Syspro_TF": "IsPhoneProcessTriggered",
            "Email_Process_Triggered_Syspro_TF": "IsEmailProcessTriggered",
            "Fax_Process_Triggered_Syspro_TF": "IsFaxProcessTriggered",
            "Web_Process_Triggered_Syspro_TF": "IsWebProcessTriggered"
        }
    },
    //migrate [dbo].[campaign_email_filter] to cam_Email_Filter
    {
        "Id": 2015,
        "Source": {
            "Tables": "[dbo].[campaign_email_filter] cef",
            "OrderBy": "order by Campaign_Number"
        },
        "Destination": {
            "Tables": "cam_Email_Filter",
            "Script": "QueryCRM_UpdateTotal.txt"
        },
        "Map": {
            "Campaign_Number_Syspro_FBI": "CampaignNumber",
            "Active_Campaign_Syspro_TF": "IsActiveCampaign",
            "Received_Mail_Box": "ReceivedMailBox",
            "Subject_Text": "SubjectText",
            "Body_Text": "BodyText"
        }
    }
]
