[
    //migrate [dbo].[address_labels] to [dbo].[utl_Address_Label]
    {
        "Id": 1000,
        "Source": {
            "Tables": "[dbo].[address_labels] al",
            "OrderBy": "order by Address_ID"
        },
        "Destination": {
            "Tables": "utl_Address_Label"
        },
        "Map": {
            "(case when Attached_To = 'A' then 1 when Attached_To = 'C' then 6 else 0 end) ModuleID": "ModuleID",
            "1 LabelFormatType": "LabelFormatType",
            "convert(bigint,Attached_Record_ID) AttachedRecordNumber": "AttachedRecordNumber",
            "convert(bigint,Address_ID) AddressID": "AddressID",
            "Label_Line_1": "LabelLine1",
            "Label_Line_2": "LabelLine2",
            "Label_Line_3": "LabelLine3",
            "Label_Line_4": "LabelLine4",
            "Label_Line_5": "LabelLine5",
            "Label_Line_6": "LabelLine6",
            "Label_Line_7": "LabelLine7",
            "Label_Line_8": "LabelLine8"
        }
    },
    //migrate [dbo].[address] to [dbo].[utl_Address]
    {
        "Id": 1001,
        "Source": {
            "Tables": "[dbo].[address] ad",
            "OrderBy": "order by ad.Account_Number",
            "Join": "left join [dbo].[account] acc on acc.Account_Number = ad.Account_Number and ad.Attached_To = 'A'"
        },
        "Destination": {
            "Tables": "utl_Address"
        },
        "Map": {
            "(case when Attached_To = 'A' then 1 when Attached_To = 'C' then 6 else 0 end) ModuleID": "ModuleID",
            "convert(bigint,ad.Account_Number) AccountNumber": "AccountNumber",
            "convert(bigint,Attached_Record_Number) AttachedRecordNumber": "AttachedRecordNumber",
            "Location_Name": "LocationName",
            "Attention_Name": "AttentionName",
            "convert(bigint,Attention_Contact_Number) AttentionContactNumber": "AttentionContactNumber",
            "Street_Line_1": "StreetLine1",
            "Street_Line_2": "StreetLine2",
            "Street_Line_3": "StreetLine3",
            "City": "City",
            "County": "County",
            "State": "State",
            "Postal_Code": "PostalCode",
            "Country": "Country",
            "Address_Type": "AddressType",
            "Accounting_Interface": "AccountingInterface",
            "Ship_To_ID": "ShipToID",
            "Address_Label_Format": "AddressLabelFormat",
            "(case when ad.Address_Record_Number = acc.Primary_Address_Record then 1 else 0 end) IsPrimaryAddress": "IsPrimaryAddress",
            "(case when ad.Address_Record_Number = acc.Primary_Bill_To_Address_ID then 1 else 0 end) IsPrimaryBillToAddress": "IsPrimaryBillToAddress",
            "(case when ad.Address_Record_Number = acc.Primary_Ship_To_Address_ID then 1 else 0 end) IsPrimaryShipToAddress": "IsPrimaryShipToAddress",
            "Address_Notes": "AddressNotes"
        }
    },
    //migrate [dbo].[phone] to [dbo].[fld_Multi_FieldValue]
    {
        "Id": 1002,
        "Source": {
            "Tables": "[dbo].[phone] p",
            "OrderBy": "order by p.Account_Number",
            "Join": "left join [dbo].[account] acc on acc.Account_Number = p.Account_Number and p.Attached_To = 'A'"
        },
        "Destination": {
            "Tables": "fld_Multi_FieldValue"
        },
        "NeedTruncate": false,
        "Map": {
            "(case when Phone_Medium = 'V' then 5 when Phone_Medium = 'F' then 6 else 0 end) FieldID": "FieldID",
            "convert(bigint,p.Account_Number) RecID": "RecID",
            "[tempdb].[dbo].[ConvertPhoneFax](Phone_Number,'') FieldVal": "FieldVal",
            "Extension": "Ext",
            "(case when ((p.Phone_Record_Number = acc.Primary_Phone_Record and p.Phone_Medium = 'V') or (p.Phone_Record_Number = acc.Primary_Fax_Record and p.Phone_Medium = 'F')) then 1 else 0 end) IsPrimary": "IsPrimary",
            "p.Notes": "Notes"
        }
    },
    //migrate [dbo].[net] to [dbo].[fld_Multi_FieldValue]
    {
        "Id": 1003,
        "Source": {
            "Tables": "[dbo].[net] n",
            "OrderBy": "order by n.Account_Number",
            "Join": "left join [dbo].[account] acc on acc.Account_Number = n.Account_Number and n.Attached_To = 'A'"
        },
        "Destination": {
            "Tables": "fld_Multi_FieldValue"
        },
        "NeedTruncate": false,
        "Map": {
            "(case when Address_Type = 'E' then 7 when Address_Type = 'W' then 8 else 0 end) FieldID": "FieldID",
            "convert(bigint,n.Account_Number) RecID": "RecID",
            "Net_Address": "FieldVal",
            "(case when ((n.Net_Record_Number = acc.Primary_Email_Record and n.Address_Type = 'E') or (n.Net_Record_Number = acc.Primary_Web_Record and n.Address_Type = 'W')) then 1 else 0 end) IsPrimary": "IsPrimary",
            "n.Notes": "Notes"
        }
    },
    //migrate [adaptv3SAMPLE].[dbo].[account] to acc_Account
    {
        "Id": 1004,
        "Source": {
            "Tables": "[dbo].[account] acc",
            "OrderBy": "order by acc.Account_Number",
            "Join": "left join [dbo].[address] ad on ad.Account_Number = acc.Account_Number and ad.Address_Record_Number = acc.Primary_Address_Record and ad.Attached_To = 'A'",
            "Join1": "left join [dbo].[phone] phone on phone.Account_Number = acc.Account_Number and phone.Phone_Record_Number = acc.Primary_Phone_Record and phone.Phone_Medium = 'V' and phone.Attached_To = 'A'",
            "Join2": "left join [dbo].[phone] fax on fax.Account_Number = acc.Account_Number and fax.Phone_Record_Number = acc.Primary_Fax_Record and fax.Phone_Medium = 'F' and fax.Attached_To = 'A'",
            "Join3": "left join [dbo].[net] email on email.Account_Number = acc.Account_Number and email.Attached_Record_Number = acc.Primary_Email_Record and email.Address_Type = 'E' and email.Attached_To = 'A'",
            "Join4": "left join [dbo].[net] web on web.Account_Number = acc.Account_Number and web.Attached_Record_Number = acc.Primary_Web_Record and web.Address_Type = 'W' and web.Attached_To = 'A'"
        },
        "Destination": {
            "Tables": "acc_Account"
        },
        "Map": {
            "convert(bigint,acc.Account_Number) AccountNumber": "AccountNumber",
            "acc.Account_Name": "AccountName",
            "Account_Full_Name": "AccountFullName",
            "Company_ID": "CompanyID",
            "Customer_Number": "CustomerNumber",
            "Vendor_Number": "VendorNumber",
            "convert(varchar(255),acc.Account_Type) AccountTypeID": "AccountTypeID",
            "convert(varchar(255),acc.Last_Primary_Source) LastPrimarySourceID": "LastPrimarySourceID",
            "convert(varchar(255),acc.Last_Secondary_Source) LastSecondarySourceID": "LastSecondarySourceID",
            "convert(bigint,acc.Last_Marketing_Campaign) LastMarketingCampaignID": "LastMarketingCampaignID",
            "convert(varchar(255),acc.Last_Marketing_Event) LastMarketingEventID": "LastMarketingEventID",
            "acc.Original_Primary_Source": "OriginalPrimarySourceID",
            "acc.Original_Secondary_Source": "OriginalSecondarySourceID",
            "convert(int, acc.Original_Marketing_Campaign) OriginalMarketingCampaignID": "OriginalMarketingCampaignID",
            "convert(int, acc.Original_Marketing_Event) OriginalMarketingEventID": "OriginalMarketingEventID",
            "convert(varchar(255),acc.Territory_ID) TerritoryID": "TerritoryID",
            "Business_Type": "BusinessTypeID",
            "Account_Manager_Syspro_GetUserID": "AccountManager",
            "Service_Manager_Syspro_GetUserID": "ServiceManagerID",
            //"Service_Contract_Number":  "",
            //"Last_Technician": "",
            //"Last_Service_Date": "",
            "convert(varchar(255),Support_Basis) SupportStatusID": "SupportStatusID",
            "Free_Support_Expires_Syspro_TF": "ReceivesFreeSupport",
            "[tempdb].[dbo].[GetDate](Free_Support_Expires_Date) ReceivesFreeSupportUntil": "ReceivesFreeSupportUntil",
            "convert(varchar(255),Service_Location) ServiceLocationID": "ServiceLocationID",
            "convert(varchar(255),acc.Service_Portal_Access_Level) ServicePortalAccessLevel": "ServicePortalAccessLevel",
            "convert(bigint,Primary_Sales_Contact) PrimaryContactID": "PrimaryContactID",
            //"Primary_Service_Contact":  "",
            //"Primary_Collections_Contact": "",
            //"Secondary_Customer_Contact": "",
            //"Primary_Vendor_Contact": "",
            //"Secondary_Vendor_Contact": "",
            //"Last_Phone_Record": "",
            "([tempdb].[dbo].[ConvertPhoneFax](phone.Phone_Number,phone.Extension)) TelephoneNumber": "TelephoneNumber",
            //"Phone_Count": "",
            "([tempdb].[dbo].[ConvertPhoneFax](fax.Phone_Number,fax.Extension)) FaxNumber": "FaxNumber",
            //"Fax_Count": "",
            //"Last_Address_Record": "",
            "ad.Location_Name": "AddressLocationName",
            "ad.Street_Line_1": "AddressLine1",
            "ad.Street_Line_2": "AddressLine2",
            "ad.Street_Line_3": "AddressLine3",
            "ad.City": "City",
            "ad.County": "County",
            "ad.State": "State",
            "ad.Postal_Code": "PostalCode",
            "ad.Country": "Country",
            "ad.Address_Type": "AddressTypeID",
            "ad.Address_Notes": "AddressNotes",
            //"Primary_Address_Record": "",
            //"Primary_Bill_To_Address_ID": "",
            //"Primary_Ship_To_Address_ID": "",
            //"Address_Count": "",
            //"Last_Net_Record": "",
            "email.Net_Address EmailAddress": "EmailAddress",
            //"Email_Count": "",
            "web.Net_Address WebAddress": "WebAddress",
            //"Web_Count": "",
            //"Alert_Flag": "",
            "acc.Active_Flag_Syspro_TF": "IsActiveAccount",
            "convert(varchar(255),acc.Language) LanguageID": "LanguageID",
            "convert(bigint,Total_Activities) TotalActivities": "TotalActivities",
            "convert(decimal(15,4),Total_Sales) TotalSales": "TotalSales",
            //"Total_Open_Sales": "",
            "convert(decimal(15,4),Total_Lost_Sales) TotalLostSales": "TotalLostSales",
            "Open_Service_Tickets": "TotalOpenServiceTicket",
            "Closed_Service_Tickets": "TotalClosedServiceTicket",
            //"Last_Service_Contact": "",
            "convert(varchar(255),acc.Last_Milestone) LastMilestoneID": "LastMilestoneID",
            "[tempdb].[dbo].[GetDate](acc.Last_Milestone_Date) LastMilestoneDate": "LastMilestoneDate",
            "convert(varchar(255),acc.Next_Milestone) NextMilestoneID": "NextMilestoneID",
            "convert(varchar(255),Tax_Schedule) TaxScheduleID": "TaxScheduleID",
            "convert(varchar(255),Payment_Terms) PaymentTermID": "PaymentTermID",
            "Credit_Hold_Syspro_TF": "IsCreditHold",
            //"Credit_Hold_Date": "",
            "convert(varchar(255),Shipping_Method) ShippingMethodID": "ShippingMethodID",
            "convert(varchar(255),FOB) FOBID": "FOBID",
            "convert(varchar(255),[tempdb].[dbo].[GetCurrencyCodeID](acc.Currency_Code)) CurrencyCodeID": "CurrencyCodeID",
            "convert(varchar(255),Customer_Class) CustomerClassID": "CustomerClassID",
            "acc.Do_Not_Call_Syspro_TF": "IsDoNotCall",
            "acc.Do_Not_Fax_Syspro_TF": "IsDoNotFax",
            "acc.Do_Not_Email_Syspro_TF": "IsDoNotEmail",
            "acc.Do_Not_Mail_Syspro_TF": "IsDoNotMail",
            "Accounting_Branch": "Branch",
            //"(select count(Contact_Number) from [dbo].[contact] where Account_Number = acc.Account_Number) TotalContact": "TotalContact",
            //"(select count(Item_Owned_Record_ID) from [dbo].[acctitem] where Account_Number = acc.Account_Number) TotalItemOwned": "TotalItemOwned",
            //"convert(decimal(15,4),(select count(Opportunity_Number) from [dbo].[oppty] where Account_Number = acc.Account_Number and Status = 1)) TotalOpenOpportunities": "TotalOpenOpportunities",
            //"convert(decimal(15,4),(select count(Opportunity_Number) from [dbo].[oppty] where Account_Number = acc.Account_Number and Status = 4)) TotalPostedOpportunities": "TotalPostedOpportunities",
            //"convert(decimal(15,4),(select count(Opportunity_Number) from [dbo].[oppty] where Account_Number = acc.Account_Number and Status = 5)) TotalCanceledOpportunities": "TotalCanceledOpportunities",
            //"(select count(Contract_Number) from [dbo].[service_contracts] where Account_Number = acc.Account_Number and Contract_Status = 2) TotalActiveServiceContracts": "TotalActiveServiceContracts",
            //"(select count(Contract_Number) from [dbo].[service_contracts] where Account_Number = acc.Account_Number and Contract_Status = 4) TotalExpiredServiceContracts": "TotalExpiredServiceContracts",
            //"(select count(Goal_Record_ID) from [dbo].[sales_goals] where Account_Number = acc.Account_Number) TotalGoals": "TotalGoals",
            //"(select top 1 ([tempdb].[dbo].[GetDateTime](Activity_Date,Activity_Time)) from [dbo].[act] where Account_Number = acc.Account_Number order by Activity_Date desc,Activity_Time desc) LastActivityDate": "LastActivityDate",
            //"(select top 1 ([tempdb].[dbo].[GetDateTime](Start_Date,Start_Time)) from [dbo].[appt] where Account_Number = acc.Account_Number and Completed = 'F' ORDER BY Account_Number ASC ,Completed ASC ,Start_Date ASC ,Start_Time ASC ,Appointment_ID ASC) NextActivityDate": "NextActivityDate",
            "acc.Notes": "Notes",
            "[tempdb].[dbo].[GetDateTime](acc.Create_Date,acc.Created_Time) Created_Date": "CreatedDate",
            "acc.Create_User_Syspro_GetUserID": "CreatedBy",
            "[tempdb].[dbo].[GetDateTime](acc.Modified_Date,acc.Modified_Time) ModifiedDate": "ModifiedDate",
            "acc.Modified_User_Syspro_GetUserID": "ModifiedBy"
        }
    }

]
